{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Group\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Stage Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Full Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Birthday\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Category\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, _toDisplayString($data.fireSaveData.categories), 1 /* TEXT */), _createElementVNode(\"table\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fireSaveData.categories, function (category) {\n    return _openBlock(), _createElementBlock(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.people, function (person) {\n      return _openBlock(), _createElementBlock(\"td\", null, _toDisplayString(person.grpName), 1 /* TEXT */);\n    }), 256 /* UNKEYED_FRAGMENT */))]);\n  }), 256 /* UNKEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_toDisplayString","$data","fireSaveData","categories","_hoisted_1","_renderList","category","people","person","grpName"],"sources":["/Users/shan/SER375/src/views/Spreadsheet.vue"],"sourcesContent":["<template>\n    <p>{{ fireSaveData.categories }}</p>\n    <table>\n        <tr>\n            <th>Group</th>\n            <th>Stage Name</th>\n            <th>Full Name</th>\n            <th>Birthday</th>\n            <th>Category</th>\n        </tr>\n        <tr v-for=\"category in fireSaveData.categories\">\n            <td v-for=\"person in category.people\">{{ person.grpName }}</td>\n        </tr>\n    </table>\n</template>\n\n<script>\nimport {\n    getAuth,\n    onAuthStateChanged,\n} from \"firebase/auth\";\n\nexport default {\n    name: 'Spreadsheet',\n    data() {\n        return {\n            currUser: {},\n            fireSaveData: {},\n        }\n    },\n    mounted() {\n        const auth = getAuth();\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                this.initialize();\n            }\n        });\n    },\n    methods: {\n        async initialize() {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n            this.currUser = currentUser;\n            const userDoc = await this.$db.collection(\"users\").doc(currentUser.uid).get();\n            if (userDoc.exists) {\n                const saveData = userDoc.data();\n                this.fireSaveData = saveData;\n            } else {\n                const saveData = await this.$db.collection(\"users\").doc(currentUser.uid).set(\n                    {\n                        \"categories\": [\n                            {\n                                \"catName\": \"Unsorted\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Ults\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Semis\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Regs\",\n                                \"people\": []\n                            }\n                        ]\n                    }\n                );\n            }\n        },\n        combineLists(saveData) {\n            let combined = [];\n            for (category in saveData.categories) {\n\n            }\n        }\n    }\n}\n</script>"],"mappings":";8BAGQA,mBAAA,CAMK,a,aALDA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBARxBC,mBAAA,CAAAC,SAAA,SACIF,mBAAA,CAAoC,WAAAG,gBAAA,CAA9BC,KAAA,CAAAC,YAAY,CAACC,UAAU,kBAC7BN,mBAAA,CAWQ,gBAVJO,UAMK,G,kBACLN,mBAAA,CAEKC,SAAA,QAZbM,WAAA,CAU+BJ,KAAA,CAAAC,YAAY,CAACC,UAAU,EAVtD,UAUmBG,QAAQ;yBAAnBR,mBAAA,CAEK,c,kBADDA,mBAAA,CAA+DC,SAAA,QAX3EM,WAAA,CAWiCC,QAAQ,CAACC,MAAM,EAXhD,UAWuBC,MAAM;2BAAjBV,mBAAA,CAA+D,YAAAE,gBAAA,CAAtBQ,MAAM,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}