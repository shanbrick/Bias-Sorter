{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  \"class\": \"uploadButton\",\n  id: \"import\"\n}, \"Upload List\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"listSaver\",\n    style: _normalizeStyle(_ctx.style),\n    ref: \"saver\",\n    tabindex: \"0\",\n    onBlur: _cache[3] || (_cache[3] = function () {\n      return _ctx.close && _ctx.close.apply(_ctx, arguments);\n    })\n  }, [_createElementVNode(\"button\", {\n    \"class\": \"closeUpload\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.closeUploader();\n    })\n  }, \"╳\"), _createElementVNode(\"button\", {\n    \"class\": \"uploadButton\",\n    style: {\n      \"margin-bottom\": \"20px\"\n    },\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.saveJSON();\n    })\n  }, \"Save List\"), _createElementVNode(\"input\", {\n    \"class\": \"uploadButton\",\n    type: \"file\",\n    id: \"selectFiles\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.uploadFile && $options.uploadFile.apply($options, arguments);\n    })\n  }), _hoisted_1], 36 /* STYLE, NEED_HYDRATION */)), [[_vShow, _ctx.show]]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","style","_normalizeStyle","_ctx","ref","tabindex","onBlur","_cache","close","apply","arguments","onClick","$event","$options","closeUploader","saveJSON","type","uploadFile","_hoisted_1","show"],"sources":["/Users/shan/SER375/src/components/ListSaver.vue"],"sourcesContent":["<template>\n    <div class=\"listSaver\" v-show=\"show\" :style=\"style\" ref=\"saver\" tabindex=\"0\" @blur=\"close\">\n        <button class=\"closeUpload\" @click=\"closeUploader()\">╳</button>\n        <button class=\"uploadButton\" style=\"margin-bottom: 20px\" @click=\"saveJSON()\">Save List</button>\n        <input class=\"uploadButton\" type=\"file\" id=\"selectFiles\" @click=\"uploadFile\" />\n        <button class=\"uploadButton\" id=\"import\">Upload List</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        saveJSON() {\n            var a = document.createElement(\"a\");\n            var file = new Blob([JSON.stringify(this.fireSaveData)], { type: 'application/json' });\n            a.href = URL.createObjectURL(file);\n            a.download = 'exportSaveData.json';\n            a.click();\n            this.showFileUploader = false;\n        },\n        uploadFile() {\n            document.getElementById(\"import\").onclick = () => {\n                const files = document.getElementById(\"selectFiles\").files;\n                if (files.length <= 0) {\n                    return false;\n                }\n\n                const fr = new FileReader();\n\n                fr.onload = (e) => {\n                    const result = JSON.parse(e.target.result);\n                    this.fireSaveData = result;\n\n                    this.$db.collection(\"users\").doc(this.currUser.uid).set(this.fireSaveData);\n\n                    this.homePageArrays = [];\n                    for (let i = 0; i < this.fireSaveData.categories.length; i++) {\n                        this.homePageArrays.push(this.fireSaveData.categories[i].people);\n                    }\n                    this.testArray = [];\n                    for (let i = 1; i < this.fireSaveData.categories.length; i++) {\n                        this.testArray.push(this.fireSaveData.categories[i]);\n                    }\n                };\n                fr.readAsText(files.item(0));\n                this.showFileUploader = false;\n            };\n        },\n        closeUploader() {\n            this.showFileUploader = false;\n        },\n    }\n}\n</script>\n\n<style>\n.upload {\n    background: white;\n    border-radius: 5px;\n    box-shadow: 0px 0px 5px black;\n    font-size: 13px;\n    height: fit-content;\n    margin: auto;\n    padding: 5px 10px;\n    line-height: 1px;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 300px;\n    z-index: 999;\n}\n\n.uploadButton {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    padding: 7px 15px;\n    text-align: center;\n    text-decoration: none;\n    width: 100%;\n}\n\n.uploadButton:hover {\n    background-color: #505cc7;\n}\n\n.closeUpload {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: block;\n    float: right;\n    font-size: 16px;\n    margin-bottom: 20px;\n    text-align: center;\n    text-decoration: none;\n}\n\n.closeUpload:hover {\n    background-color: #505cc7;\n}\n</style>"],"mappings":";8BAKQA,mBAAA,CAA6D;EAArD,SAAM,cAAc;EAACC,EAAE,EAAC;GAAS,aAAW;;wCAJxDC,mBAAA,CAKM;IALD,SAAM,WAAW;IAAgBC,KAAK,EAD/CC,eAAA,CACiDC,IAAA,CAAAF,KAAK;IAAEG,GAAG,EAAC,OAAO;IAACC,QAAQ,EAAC,GAAG;IAAEC,MAAI,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEJ,IAAA,CAAAK,KAAA,IAAAL,IAAA,CAAAK,KAAA,CAAAC,KAAA,CAAAN,IAAA,EAAAO,SAAA,CAAK;IAAA;MACrFZ,mBAAA,CAA+D;IAAvD,SAAM,aAAa;IAAEa,OAAK,EAAAJ,MAAA,QAAAA,MAAA,gBAAAK,MAAA;MAAA,OAAEC,QAAA,CAAAC,aAAa;IAAA;KAAI,GAAC,GACtDhB,mBAAA,CAA+F;IAAvF,SAAM,cAAc;IAACG,KAA2B,EAA3B;MAAA;IAAA,CAA2B;IAAEU,OAAK,EAAAJ,MAAA,QAAAA,MAAA,gBAAAK,MAAA;MAAA,OAAEC,QAAA,CAAAE,QAAQ;IAAA;KAAI,WAAS,GACtFjB,mBAAA,CAA+E;IAAxE,SAAM,cAAc;IAACkB,IAAI,EAAC,MAAM;IAACjB,EAAE,EAAC,aAAa;IAAEY,OAAK,EAAAJ,MAAA,QAAAA,MAAA;MAAA,OAAEM,QAAA,CAAAI,UAAA,IAAAJ,QAAA,CAAAI,UAAA,CAAAR,KAAA,CAAAI,QAAA,EAAAH,SAAA,CAAU;IAAA;MAC3EQ,UAA6D,C,8CAJlCf,IAAA,CAAAgB,IAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}