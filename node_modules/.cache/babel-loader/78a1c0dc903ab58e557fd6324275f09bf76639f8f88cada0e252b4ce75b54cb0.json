{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, vModelText as _vModelText, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8858edc6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"topBar\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Remove category and move people to Unsorted\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Remove category and people\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"upload\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"uploadButton\",\n  id: \"import\"\n}, \"Upload List\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  id: \"unsorted\",\n  class: \"unsorted\",\n  oncontextmenu: \"return false;\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"categoryTitle\"\n}, \"Unsorted\", -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  class: \"unsortedPeople\"\n};\nconst _hoisted_11 = [\"onContextmenu\", \"src\"];\nconst _hoisted_12 = {\n  class: \"idolName\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"groupName\"\n};\nconst _hoisted_15 = {\n  class: \"sideCats\",\n  oncontextmenu: \"return false;\"\n};\nconst _hoisted_16 = [\"id\"];\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  class: \"categoryTitle\"\n};\nconst _hoisted_19 = {\n  key: 1\n};\nconst _hoisted_20 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_21 = {\n  key: 0\n};\nconst _hoisted_22 = {\n  class: \"peopleDivss\"\n};\nconst _hoisted_23 = [\"onContextmenu\", \"src\"];\nconst _hoisted_24 = {\n  class: \"idolName\"\n};\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = {\n  class: \"groupName\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ContextMenu = _resolveComponent(\"ContextMenu\");\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"topBarButton\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.openFileUploader())\n  }, \" ↥ Upload List\"), _createElementVNode(\"button\", {\n    class: \"topBarButton\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.saveJSON())\n  }, \" ↥ Save List\"), _createElementVNode(\"button\", {\n    class: \"topBarButton\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.addNewCategory())\n  }, \" +  Add New Category\"), !$data.editModeOn ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"topBarButton\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.toggleEditModeOn())\n  }, \" ✎  Edit Categories\")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"topBarButton\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.toggleEditModeOff())\n  }, \" ✓  Save Categories\"))]), _createVNode(_component_ContextMenu, {\n    display: $data.showContextMenu,\n    ref: \"menu\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      class: \"contextButton\",\n      onClick: _cache[5] || (_cache[5] = $event => $options.removeFromHome())\n    }, \"Remove \" + _toDisplayString($data.clickedPerson.stageName), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"display\"]), _createVNode(_component_ContextMenu, {\n    display: $data.showContextMenuCat,\n    ref: \"menuCat\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _hoisted_3, _hoisted_4]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"display\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"input\", {\n    class: \"uploadButton\",\n    type: \"file\",\n    id: \"selectFiles\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }), _hoisted_6], 512 /* NEED_PATCH */), [[_vShow, $data.showFileUploader]]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: \"boxHeaderUnsorted\",\n    oncontextmenu: \"return false;\",\n    onContextmenu: _cache[7] || (_cache[7] = _withModifiers($event => $options.openContextMenuCat($event, _ctx.element), [\"right\"]))\n  }, [..._hoisted_9], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_draggable, {\n    list: $data.homePageArrays[0],\n    group: \"everyone\",\n    animation: 300,\n    onChange: _cache[8] || (_cache[8] = $event => $options.updateStorage(0, $data.homePageArrays[0])),\n    disabled: $data.editModeOn,\n    \"item-key\": \"a\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [(_openBlock(), _createElementBlock(\"div\", {\n      class: \"peopleDivss\",\n      key: element.stageName\n    }, [_createElementVNode(\"img\", {\n      oncontextmenu: \"return false;\",\n      onContextmenu: _withModifiers($event => $options.openContextMenu($event, element), [\"right\"]),\n      class: \"homePeoplePics\",\n      src: require('../assets/imageArchive/' + element.imgLink)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), _createElementVNode(\"p\", _hoisted_12, _toDisplayString(element.stageName), 1 /* TEXT */), _createElementVNode(\"a\", {\n      href: \"/groupPage\",\n      onClick: $event => $options.populateGroupPage(element.grpName)\n    }, [_createElementVNode(\"p\", _hoisted_14, _toDisplayString(element.grpName), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_13)]))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"list\", \"disabled\"])])]), _createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_draggable, {\n    list: $data.testArray,\n    animation: 300,\n    onChange: _cache[10] || (_cache[10] = $event => $options.updateCatOrder($data.testArray)),\n    disabled: !$data.editModeOn,\n    \"item-key\": \"b\"\n  }, {\n    item: _withCtx(({\n      element: catArr,\n      index\n    }) => [_createElementVNode(\"div\", {\n      id: catArr,\n      class: \"categories\"\n    }, [_createElementVNode(\"div\", {\n      class: \"boxHeaderCategories\",\n      onContextmenu: _cache[9] || (_cache[9] = _withModifiers($event => $options.openContextMenuCat($event, _ctx.element), [\"right\"]))\n    }, [!$data.editModeOn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"p\", _hoisted_18, _toDisplayString(catArr.catName), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"boxHeaderCatsInput\",\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => catArr.catName = $event,\n      onInput: $event => $options.updateCatName(index + 1)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_20), [[_vModelText, catArr.catName]])]))], 32 /* NEED_HYDRATION */), !$data.editModeOn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createVNode(_component_draggable, {\n      list: $data.homePageArrays[index + 1],\n      group: \"everyone\",\n      animations: 300,\n      onChange: $event => $options.updateStorage(index + 1, $data.homePageArrays[index + 1]),\n      disabled: $data.editModeOn,\n      \"item-key\": \"c\"\n    }, {\n      item: _withCtx(({\n        element: pers\n      }) => [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"img\", {\n        oncontextmenu: \"return false;\",\n        onContextmenu: _withModifiers($event => $options.openContextMenu($event, pers), [\"right\"]),\n        class: \"homePeoplePics\",\n        src: require('../assets/imageArchive/' + pers.imgLink)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_23), _createElementVNode(\"p\", _hoisted_24, _toDisplayString(pers.stageName), 1 /* TEXT */), _createElementVNode(\"a\", {\n        href: \"/groupPage\",\n        onClick: $event => $options.populateGroupPage(pers.grpName)\n      }, [_createElementVNode(\"p\", _hoisted_26, _toDisplayString(pers.grpName), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_25)])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"list\", \"onChange\", \"disabled\"])])) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_16)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"list\", \"disabled\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","oncontextmenu","_hoisted_8","key","_createElementBlock","_Fragment","_hoisted_1","onClick","_cache","$event","$options","openFileUploader","saveJSON","addNewCategory","$data","editModeOn","toggleEditModeOn","toggleEditModeOff","_createVNode","_component_ContextMenu","display","showContextMenu","ref","default","_withCtx","removeFromHome","_toDisplayString","clickedPerson","stageName","_","showContextMenuCat","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","args","uploadFile","_hoisted_6","showFileUploader","_hoisted_7","onContextmenu","_withModifiers","openContextMenuCat","_ctx","element","_hoisted_9","_hoisted_10","_component_draggable","list","homePageArrays","group","animation","onChange","updateStorage","disabled","item","openContextMenu","src","require","imgLink","_hoisted_11","_hoisted_12","href","populateGroupPage","grpName","_hoisted_14","_hoisted_13","_hoisted_15","testArray","updateCatOrder","catArr","index","_hoisted_17","_hoisted_18","catName","_hoisted_19","onInput","updateCatName","_hoisted_20","_hoisted_21","animations","pers","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_26","_hoisted_25","_createCommentVNode","_hoisted_16"],"sources":["/Users/shan/SER375/bias-sorter/src/views/ListView.vue"],"sourcesContent":["<template>\n    <div class=\"topBar\">\n        <button class=\"topBarButton\" @click=\"openFileUploader()\">&nbsp;↥&nbsp;Upload List</button>\n        <button class=\"topBarButton\" @click=\"saveJSON()\">&nbsp;↥&nbsp;Save List</button>\n        <button class=\"topBarButton\" @click=\"addNewCategory()\">&nbsp;+&nbsp; Add New Category</button>\n        <button class=\"topBarButton\" @click=\"toggleEditModeOn()\" v-if=\"!editModeOn\">&nbsp;✎&nbsp; Edit\n            Categories</button>\n        <button class=\"topBarButton\" @click=\"toggleEditModeOff()\" v-else>&nbsp;✓&nbsp; Save Categories</button>\n    </div>\n\n    <ContextMenu :display=\"showContextMenu\" ref=\"menu\">\n        <button class=\"contextButton\" @click=\"removeFromHome()\">Remove {{ clickedPerson.stageName }}</button>\n    </ContextMenu>\n\n    <ContextMenu :display=\"showContextMenuCat\" ref=\"menuCat\">\n        <p>Remove category and move people to Unsorted</p><br>\n        <p>Remove category and people</p>\n    </ContextMenu>\n\n    <div class=\"upload\" v-show=\"showFileUploader\">\n        <input class=\"uploadButton\" type=\"file\" id=\"selectFiles\" @click=\"uploadFile\" />\n        <button class=\"uploadButton\" id=\"import\">Upload List</button>\n    </div>\n\n    <div id=\"unsorted\" class=\"unsorted\" oncontextmenu=\"return false;\">\n        <div class=\"boxHeaderUnsorted\" oncontextmenu=\"return false;\"\n            v-on:click.right=\"openContextMenuCat($event, element)\">\n            <p class=\"categoryTitle\">Unsorted</p>\n        </div>\n        <div class=\"unsortedPeople\">\n            <draggable :list=\"homePageArrays[0]\" group=\"everyone\" :animation=\"300\"\n                @change=\"updateStorage(0, homePageArrays[0])\" :disabled=\"editModeOn\" item-key=\"a\">\n                <template #item=\"{ element }\">\n                    <div class=\"peopleDivss\" :key=\"element.stageName\">\n                        <img oncontextmenu=\"return false;\" v-on:click.right=\"openContextMenu($event, element)\"\n                            class=\"homePeoplePics\" :src=\"require('../assets/imageArchive/' + element.imgLink)\">\n                        <p class=\"idolName\">{{ element.stageName }}</p>\n                        <a href=\"/groupPage\" @click=\"populateGroupPage(element.grpName)\">\n                            <p class=\"groupName\">{{ element.grpName }}</p>\n                        </a>\n                    </div>\n                </template>\n            </draggable>\n        </div>\n    </div>\n\n\n    <div class=\"sideCats\" oncontextmenu=\"return false;\">\n        <draggable :list=\"testArray\" :animation=\"300\" @change=\"updateCatOrder(testArray)\" :disabled=\"!editModeOn\"\n            item-key=\"b\">\n            <template #item=\"{ element: catArr, index }\">\n                <div :id=catArr class=\"categories\">\n                    <div class=\"boxHeaderCategories\" v-on:click.right=\"openContextMenuCat($event, element)\">\n                        <div v-if=\"!editModeOn\">\n                            <p class=\"categoryTitle\">{{ catArr.catName }}</p>\n                        </div>\n                        <div v-else>\n                            <input class=\"boxHeaderCatsInput\" type=\"text\" v-model=\"catArr.catName\"\n                                v-on:input=\"updateCatName(index + 1)\"></input>\n                        </div>\n                    </div>\n                    <div v-if=\"!editModeOn\">\n                        <draggable :list=\"homePageArrays[index + 1]\" group=\"everyone\" :animations=\"300\"\n                            @change=\"updateStorage(index + 1, homePageArrays[index + 1])\" :disabled=\"editModeOn\"\n                            item-key=\"c\">\n                            <template #item=\"{ element: pers }\">\n                                <div class=\"peopleDivss\">\n                                    <img oncontextmenu=\"return false;\" v-on:click.right=\"openContextMenu($event, pers)\"\n                                        class=\"homePeoplePics\" :src=\"require('../assets/imageArchive/' + pers.imgLink)\">\n                                    <p class=\"idolName\">{{ pers.stageName }}</p>\n                                    <a href=\"/groupPage\" @click=\"populateGroupPage(pers.grpName)\">\n                                        <p class=\"groupName\">{{ pers.grpName }}</p>\n                                    </a>\n                                </div>\n                            </template>\n                        </draggable>\n                    </div>\n                </div>\n            </template>\n        </draggable>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nimport ContextMenu from '../components/ContextMenu.vue';\nimport { useCurrentUser, useDocument, useFirestore } from 'vuefire';\nimport { collection, doc } from 'firebase/firestore';\n\nexport default {\n    name: 'ListView',\n    order: 1,\n    components: {\n        draggable,\n        ContextMenu,\n    },\n    props: [\n\n    ],\n    mounted() {\n        // const auth = getAuth();\n        // onAuthStateChanged(auth, (user) => {\n        //     if (user) {\n        //         this.initialize();\n        //     }\n        // });\n\n        if (localStorage.getItem(\"save_data\") !== null) {\n            const saveDataFromStorage = JSON.parse(localStorage.getItem(\"save_data\"))\n            this.saveData = saveDataFromStorage\n        } else {\n            localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n        }\n\n        for (let i = 0; i < this.saveData.categories.length; i++) {\n            this.homePageArrays.push(this.saveData.categories[i].people);\n        }\n\n        for (let i = 1; i < this.saveData.categories.length; i++) {\n            this.testArray.push(this.saveData.categories[i]);\n        }\n    },\n    data() {\n        return {\n            // user: useCurrentUser(),\n            // userSaveData: useCollection(\n            //     query(\n            //         collection(db, 'users'),\n            //         where(\"userId\", \"==\", this.user.value.uid),\n            //     ),\n            // ),\n            saveData: {\n                \"categories\": [\n                    {\n                        \"catName\": \"Unsorted\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Ults\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Semis\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Regs\",\n                        \"people\": []\n                    }\n                ]\n            },\n            homePageArrays: ref([]),\n            testArray: ref([]),\n            editModeOn: false,\n            showContextMenu: false,\n            showContextMenuCat: false,\n            showFileUploader: false,\n            clickedPerson: {},\n            clickedCat: {},\n            groups: groupListEdit\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n        initialize() {\n            const currentUser = useCurrentUser();\n            const db = useFirestore();\n            console.log(\"currentUser\", currentUser);\n\n            const userData = useDocument(doc(collection(db, \"users\"), currentUser.value.uid));\n\n            console.log(\"users\", collection(db, \"users\"));\n            console.log(\"currentUser\", currentUser.value);\n            console.log(\"userData\", userData);\n            console.log(\"user.value\", userData.value);\n        },\n        addNewCategory() {\n            let arr = {\n                \"catName\": \"Untitled\",\n                \"people\": []\n            }\n            this.saveData.categories.push(arr);\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n\n            this.testArray.push(arr)\n            this.homePageArrays.push(arr.people);\n\n        },\n        toggleEditModeOn() {\n            this.editModeOn = !this.editModeOn;\n        },\n        toggleEditModeOff() {\n            this.editModeOn = !this.editModeOn;\n            window.location.reload();\n        },\n        updateCatOrder(arr) {\n            console.log(\"update cat order\", arr)\n            for (let i = 0; i < arr.length; i++) {\n                this.saveData.categories[i + 1] = arr[i];\n            }\n            console.log(\"saveData categpories\", this.saveData.categories);\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        updateStorage(i, array) {\n            this.saveData.categories[i].people = array;\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        updateCatName(i) {\n            this.saveData.categories[i].catName;\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        openContextMenu(e, person) {\n            this.clickedPerson = person;\n            this.$refs.menu.open(e);\n        },\n        openContextMenuCat(e, category) {\n            this.clickedCat = category;\n            this.$refs.menuCat.open(e);\n        },\n        openFileUploader() {\n            this.showFileUploader = true;\n        },\n        removeFromHome(e) {\n            this.$refs.menu.close(e);\n            for (let i = 0; i < this.saveData.categories.length; i++) {\n                for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n                    if (this.saveData.categories[i].people[j].imgLink === this.clickedPerson.imgLink) {\n                        this.saveData.categories[i].people = this.saveData.categories[\n                            i\n                        ].people.filter((p) => {\n                            return p.imgLink !== this.clickedPerson.imgLink;\n                        });\n                        localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n                        this.homePageArrays = [];\n                        for (let i = 0; i < this.saveData.categories.length; i++) {\n                            this.homePageArrays.push(this.saveData.categories[i].people);\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n        populateGroupPage(grpName) {\n            let selectedGroup = [];\n            for (let i = 0; i < this.groups.length; i++) {\n                if (this.groups[i].groupName === grpName) {\n                    selectedGroup = this.groups[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n        },\n        saveJSON() {\n            var a = document.createElement(\"a\");\n            var file = new Blob([localStorage.getItem(\"save_data\")], { type: 'application/json' });\n            a.href = URL.createObjectURL(file);\n            a.download = 'exportSaveData.json';\n            a.click();\n        },\n        uploadFile() {\n            document.getElementById(\"import\").onclick = () => {\n                const files = document.getElementById(\"selectFiles\").files;\n                if (files.length <= 0) {\n                    return false;\n                }\n\n                const fr = new FileReader();\n\n                fr.onload = (e) => {\n                    const result = JSON.parse(e.target.result);\n                    this.saveData = result;\n                    localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n                    this.homePageArrays = [];\n                    for (let i = 0; i < this.saveData.categories.length; i++) {\n                        this.homePageArrays.push(this.saveData.categories[i].people);\n                    }\n                    this.testArray = [];\n                    for (let i = 1; i < this.saveData.categories.length; i++) {\n                        this.testArray.push(this.saveData.categories[i]);\n                    }\n                };\n                fr.readAsText(files.item(0));\n                this.showFileUploader = false;\n            };\n        },\n    }\n}\n</script>\n\n<style scoped>\n.topBar {\n    background-color: #b3b8e9;\n    display: flex;\n    gap: 10px;\n    height: 50px;\n    margin: 0px 0px 20px;\n    padding: 9px;\n    overflow: hidden;\n}\n\n.sticky {\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n\n.topBarButton {\n    background: #00000000;\n    border: 1px solid #00000000;\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    height: 30px;\n    margin: auto;\n    text-align: center;\n    text-decoration: none;\n    width: fit-content;\n}\n\n.topBarButton:hover {\n    background-color: #505cc7;\n}\n\n.unsorted {\n    background: linear-gradient(180deg, rgba(179, 184, 233, 1) 0px, rgba(116, 127, 230, 1) 45px, rgba(218, 218, 218, 1) 45px, rgba(255, 255, 255, 1) 63%, rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    height: 60%;\n    margin: 0px 20px 20px;\n    overflow-x: hidden;\n    padding: 55px 0px 10px;\n    position: fixed;\n    width: 342px;\n    z-index: 0;\n}\n\n.unsortedPeople {\n    position: fixed;\n    overflow-x: hidden;\n    width: 342px;\n    height: 51%;\n}\n\n.boxHeaderUnsorted {\n    height: 45px;\n    margin-top: -54px;\n    margin-left: -1px;\n    margin-bottom: 15px;\n    padding-left: 20px;\n    position: fixed;\n    width: 342px;\n}\n\n.sideCats {\n    margin-left: 375px;\n    min-width: 500px;\n}\n\n.categories {\n    background: linear-gradient(180deg, rgba(179, 184, 233, 1) 0px, rgba(116, 127, 230, 1) 45px, rgba(218, 218, 218, 1) 45px, rgba(255, 255, 255, 1) 63%, rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    height: fit-content;\n    margin: 0px 20px 30px;\n    min-height: 50px;\n    padding: 55px 0px 10px;\n    position: relative;\n}\n\n.categoryTitle {\n    color: white;\n    font-size: 20px;\n    font-weight: 700;\n    position: absolute;\n    top: -9.5px;\n}\n\n.categories:after {\n    content: \"\";\n    clear: both;\n    display: table;\n}\n\n.boxHeaderCategories {\n    height: 45px;\n    margin: -55px -1px 10px;\n    padding: 20px;\n    position: relative;\n}\n\n.boxHeaderCatsInput {\n    background-image: linear-gradient(#747fe6, #b3b8e9);\n    border: 1px solid #6e6e6e;\n    border-radius: 8px;\n    box-shadow: inset 0px 0px 2px rgba(0, 0, 0, 0.5);\n    color: #fff;\n    height: 35px;\n    float: left;\n    font-size: 20px;\n    font-weight: 700;\n    margin: -15px -1px 10px -15px;\n    padding: 14px;\n    position: relative;\n}\n\n.idolName {\n    color: black;\n    font-size: 15px;\n    font-weight: bold;\n    margin: 5px;\n    text-align: center;\n}\n\n.groupName {\n    font-size: 0.75em;\n    margin: 5px;\n    text-align: center;\n}\n\n.peopleDivss {\n    /* border: 1px solid red; */\n    float: left;\n    height: fit-content;\n    padding: 5px 0px 5px;\n    text-align: center;\n    width: 170px;\n}\n\n.homePeoplePics {\n    border-radius: 8px;\n    box-shadow: 0px 0px 5px #00000080;\n    margin: 0px;\n    padding: 0px;\n    width: 130px;\n}\n\na {\n    color: black;\n    text-decoration: none;\n}\n\n.upload {\n    background: white;\n    border-radius: 5px;\n    box-shadow: 0px 0px 5px black;\n    font-size: 13px;\n    height: fit-content;\n    margin: auto;\n    padding: 5px 10px;\n    line-height: 1px;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 300px;\n    z-index: 999;\n}\n\n.uploadButton {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    padding: 7px 15px;\n    text-align: center;\n    text-decoration: none;\n    width: 100%;\n}\n\n.contextButton {\n    background-color: #ffffff00;\n    border: 1px solid #ffffff00;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 12px;\n    text-align: center;\n    text-decoration: none;\n}\n\n.contextButton:hover {\n    background-color: #b3b8e9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}