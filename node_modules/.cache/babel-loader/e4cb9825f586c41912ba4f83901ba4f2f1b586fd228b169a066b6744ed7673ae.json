{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Group\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Stage Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Full Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Birthday\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Category\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fireSaveData, function (categories) {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(categories.catName), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","fireSaveData","categories","_toDisplayString","catName"],"sources":["/Users/shan/SER375/src/views/Spreadsheet.vue"],"sourcesContent":["<template>\n    <table>\n        <tr>\n            <th>Group</th>\n            <th>Stage Name</th>\n            <th>Full Name</th>\n            <th>Birthday</th>\n            <th>Category</th>\n        </tr>\n        <tr v-for=\"categories in fireSaveData\">\n            <td>{{ categories.catName }}</td>\n        </tr>\n    </table>\n</template>\n\n<script>\nimport {\n    getAuth,\n    onAuthStateChanged,\n} from \"firebase/auth\";\n\nexport default {\n    name: 'Spreadsheet',\n    data() {\n        return {\n            currUser: {},\n            fireSaveData: {},\n        }\n    },\n    mounted() {\n        const auth = getAuth();\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                this.initialize();\n            }\n        });\n    },\n    methods: {\n        async initialize() {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n            this.currUser = currentUser;\n            const userDoc = await this.$db.collection(\"users\").doc(currentUser.uid).get();\n            if (userDoc.exists) {\n                const saveData = userDoc.data();\n                this.fireSaveData = saveData;\n            } else {\n                const saveData = await this.$db.collection(\"users\").doc(currentUser.uid).set(\n                    {\n                        \"categories\": [\n                            {\n                                \"catName\": \"Unsorted\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Ults\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Semis\",\n                                \"people\": []\n                            },\n                            {\n                                \"catName\": \"Regs\",\n                                \"people\": []\n                            }\n                        ]\n                    }\n                );\n            }\n        },\n        addNewCategory() {\n            let arr = {\n                \"catName\": \"Untitled\",\n                \"people\": []\n            }\n            this.fireSaveData.categories.push(arr);\n            this.$db.collection(\"users\").doc(this.currUser.uid).set(this.fireSaveData);\n\n            this.testArray.push(arr)\n            this.homePageArrays.push(arr.people);\n\n        },\n    }\n}\n</script>"],"mappings":";8BAEQA,mBAAA,CAMK,a,aALDA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBANpBC,mBAAA,CAWQ,gBAVJC,UAMK,G,kBACLD,mBAAA,CAEKE,SAAA,QAXbC,WAAA,CASiCC,KAAA,CAAAC,YAAY,EAT7C,UASmBC,UAAU;yBAArBN,mBAAA,CAEK,aADDD,mBAAA,CAAiC,YAAAQ,gBAAA,CAA1BD,UAAU,CAACE,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}