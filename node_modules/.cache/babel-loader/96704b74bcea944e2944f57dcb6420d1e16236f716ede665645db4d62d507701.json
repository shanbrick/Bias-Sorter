{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-7e9fce78\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Original Artist\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Song\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Team Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Contestants\")], -1 /* HOISTED */);\n});\nvar _hoisted_2 = {\n  key: 1\n};\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Original Artist\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Song\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Team Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Contestants\")], -1 /* HOISTED */);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <table>\\n        <tr>\\n            <th>Name</th>\\n            <th>1st Elim</th>\\n            <th>2nd Elim</th>\\n            <th>3rd Elim</th>\\n            <th>Final Ep</th>\\n            <th>Avg. Place</th>\\n            <th>Group</th>\\n        </tr>\\n        <tr v-for=\\\"contestant in boysPlanet[0].contestants\\\">\\n            <td>{{ contestant.name }}</td>\\n            <td>{{ contestant.firstElim }}</td>\\n            <td>{{ contestant.secondElim }}</td>\\n            <td>{{ contestant.thirdElim }}</td>\\n            <td>{{ contestant.finalEp }}</td>\\n            <td>{{ contestant.avgPlace }}</td>\\n            <td class=\\\"group\\\" @click=\\\"populateGroupPage(contestant.group)\\\" v-if=\\\"contestant.group !== '-'\\\">{{\\n                contestant.group }}</td>\\n        </tr>\\n    </table> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.boysPlanet[0].rounds, function (round, i) {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(round.roundName), 1 /* TEXT */), i === 1 ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 0\n    }, _renderList(round.performances, function (cat) {\n      return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(cat.type), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cat.pf, function (performance) {\n        return _openBlock(), _createElementBlock(\"table\", null, [_hoisted_1, _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(performance.ogArtist), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(performance.songName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(performance.teamName), 1 /* TEXT */), _createElementVNode(\"td\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(performance.contestants, function (contestant) {\n          return _openBlock(), _createElementBlock(\"p\", null, _toDisplayString(contestant), 1 /* TEXT */);\n        }), 256 /* UNKEYED_FRAGMENT */))])])]);\n      }), 256 /* UNKEYED_FRAGMENT */))]);\n    }), 256 /* UNKEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(round.performances, function (performance) {\n      return _openBlock(), _createElementBlock(\"table\", null, [_hoisted_3, _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(performance.ogArtist), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(performance.songName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(performance.teamName), 1 /* TEXT */), _createElementVNode(\"td\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(performance.contestants, function (contestant) {\n        return _openBlock(), _createElementBlock(\"p\", null, _toDisplayString(contestant), 1 /* TEXT */);\n      }), 256 /* UNKEYED_FRAGMENT */))])])]);\n    }), 256 /* UNKEYED_FRAGMENT */))]))]);\n  }), 256 /* UNKEYED_FRAGMENT */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_Fragment","_createCommentVNode","_renderList","$data","boysPlanet","rounds","round","i","_toDisplayString","roundName","performances","cat","type","pf","performance","_hoisted_1","ogArtist","songName","teamName","contestants","contestant","_hoisted_2","_hoisted_3"],"sources":["/Users/shan/SER375/src/views/Survival.vue"],"sourcesContent":["<template>\n    <!-- <table>\n        <tr>\n            <th>Name</th>\n            <th>1st Elim</th>\n            <th>2nd Elim</th>\n            <th>3rd Elim</th>\n            <th>Final Ep</th>\n            <th>Avg. Place</th>\n            <th>Group</th>\n        </tr>\n        <tr v-for=\"contestant in boysPlanet[0].contestants\">\n            <td>{{ contestant.name }}</td>\n            <td>{{ contestant.firstElim }}</td>\n            <td>{{ contestant.secondElim }}</td>\n            <td>{{ contestant.thirdElim }}</td>\n            <td>{{ contestant.finalEp }}</td>\n            <td>{{ contestant.avgPlace }}</td>\n            <td class=\"group\" @click=\"populateGroupPage(contestant.group)\" v-if=\"contestant.group !== '-'\">{{\n                contestant.group }}</td>\n        </tr>\n    </table> -->\n    <div v-for=\"(round, i) in boysPlanet[0].rounds\">\n        <p>{{ round.roundName }}</p>\n        <div v-if=\"i === 1\" v-for=\"cat in round.performances\">\n            <p>{{ cat.type }}</p>\n            <table v-for=\"performance in cat.pf\">\n                <tr>\n                    <th>Original Artist</th>\n                    <th>Song</th>\n                    <th>Team Name</th>\n                    <th>Contestants</th>\n                </tr>\n                <tr>\n                    <td>{{ performance.ogArtist }}</td>\n                    <td>{{ performance.songName }}</td>\n                    <td>{{ performance.teamName }}</td>\n                    <td>\n                        <p v-for=\"contestant in performance.contestants\">{{ contestant }}</p>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div v-else>\n            <table v-for=\"performance in round.performances\">\n                <tr>\n                    <th>Original Artist</th>\n                    <th>Song</th>\n                    <th>Team Name</th>\n                    <th>Contestants</th>\n                </tr>\n                <tr>\n                    <td>{{ performance.ogArtist }}</td>\n                    <td>{{ performance.songName }}</td>\n                    <td>{{ performance.teamName }}</td>\n                    <td>\n                        <p v-for=\"contestant in performance.contestants\">{{ contestant }}</p>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\nimport boysPlanet from '@/jsons/BoysPlanet.json'\n\nexport default {\n    name: 'Survival',\n    data() {\n        return {\n            boysPlanet: boysPlanet,\n            groups: groupListEdit\n        }\n    },\n    methods: {\n        findElim(name, round) {\n            for (let i = 0; i < this.boysPlanet[0].contestants; i++) {\n                if (this.boysPlanet[0].contestants[i].name === name) {\n                    if (round === \"0\") {\n                        return contestants[i].firstElim;\n                    } else if (round === \"1\") {\n                        return contestants[i].secondElim;\n                    } else if (round === \"2\") {\n                        return contestants[i].thirdElim;\n                    } else if (round === \"3\") {\n                        return contestants[i].finalEp;\n                    }\n                }\n            }\n        },\n        populateGroupPage(grpName) {\n            let selectedGroup = [];\n            for (let i = 0; i < this.groups.length; i++) {\n                if (this.groups[i].groupName === grpName) {\n                    selectedGroup = this.groups[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n            this.$router.push('/groupPage')\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n        }\n    }\n}\n</script>\n\n<style scoped>\ntable {\n    margin: auto;\n    text-align: left;\n}\n\ntr {\n    padding: 10px;\n}\n\ntd {\n    padding-right: 10px;\n}\n\n.group:hover {\n    color: violet;\n    cursor: pointer;\n}\n</style>"],"mappings":";;;;;sBA2BgBA,mBAAA,CAKK,a,aAJDA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAoB,YAAhB,aAAW,E;;;EA/BnCC,GAAA;AAAA;;sBA6CgBD,mBAAA,CAKK,a,aAJDA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAjDnCE,mBAAA,CAAAC,SAAA,SACIC,mBAAA,yxBAoBY,G,kBACZF,mBAAA,CAuCMC,SAAA,QA7DVE,WAAA,CAsB8BC,KAAA,CAAAC,UAAU,IAAIC,MAAM,EAtBlD,UAsBiBC,KAAK,EAAEC,CAAC;yBAArBR,mBAAA,CAuCM,cAtCFF,mBAAA,CAA4B,WAAAW,gBAAA,CAAtBF,KAAK,CAACG,SAAS,kBACVF,CAAC,U,kBAAZR,mBAAA,CAkBMC,SAAA;MA1CdF,GAAA;IAAA,GAAAI,WAAA,CAwB0CI,KAAK,CAACI,YAAY,EAxB5D,UAwBmCC,GAAG;2BAA9BZ,mBAAA,CAkBM,cAjBFF,mBAAA,CAAqB,WAAAW,gBAAA,CAAfG,GAAG,CAACC,IAAI,mB,kBACdb,mBAAA,CAeQC,SAAA,QAzCpBE,WAAA,CA0ByCS,GAAG,CAACE,EAAE,EA1B/C,UA0B0BC,WAAW;6BAAzBf,mBAAA,CAeQ,gBAdJgB,UAKK,EACLlB,mBAAA,CAOK,aANDA,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACE,QAAQ,kBAC3BnB,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACG,QAAQ,kBAC3BpB,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACI,QAAQ,kBAC3BrB,mBAAA,CAEK,c,kBADDE,mBAAA,CAAqEC,SAAA,QAtC7FE,WAAA,CAsCgDY,WAAW,CAACK,WAAW,EAtCvE,UAsCkCC,UAAU;+BAApBrB,mBAAA,CAAqE,WAAAS,gBAAA,CAAjBY,UAAU;;;sDAK9ErB,mBAAA,CAiBM,OA5DdsB,UAAA,I,kBA4CYtB,mBAAA,CAeQC,SAAA,QA3DpBE,WAAA,CA4CyCI,KAAK,CAACI,YAAY,EA5C3D,UA4C0BI,WAAW;2BAAzBf,mBAAA,CAeQ,gBAdJuB,UAKK,EACLzB,mBAAA,CAOK,aANDA,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACE,QAAQ,kBAC3BnB,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACG,QAAQ,kBAC3BpB,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BM,WAAW,CAACI,QAAQ,kBAC3BrB,mBAAA,CAEK,c,kBADDE,mBAAA,CAAqEC,SAAA,QAxD7FE,WAAA,CAwDgDY,WAAW,CAACK,WAAW,EAxDvE,UAwDkCC,UAAU;6BAApBrB,mBAAA,CAAqE,WAAAS,gBAAA,CAAjBY,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}