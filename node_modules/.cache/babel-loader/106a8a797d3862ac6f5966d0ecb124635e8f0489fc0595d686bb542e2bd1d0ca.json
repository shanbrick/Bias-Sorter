{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-9a6955d2\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", null, \"Save as JSON\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", null, \"Save as Image\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"uploadButton\",\n    id: \"import\"\n  }, \"Upload List\", -1 /* HOISTED */);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"listSaver\",\n    ref: \"saver\",\n    tabindex: \"0\",\n    onBlur: _cache[5] || (_cache[5] = function () {\n      return $options.close && $options.close.apply($options, arguments);\n    })\n  }, [_createElementVNode(\"button\", {\n    \"class\": \"closeUpload\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.close && $options.close.apply($options, arguments);\n    })\n  }, \"╳\"), _hoisted_1, _hoisted_2, _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    \"class\": \"uploadButton\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.saveAsImage('');\n    })\n  }, \"Save Full List\"), _createElementVNode(\"button\", {\n    \"class\": \"uploadButton\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.saveAsImage && $options.saveAsImage.apply($options, arguments);\n    })\n  }, \"Save List\")], 512 /* NEED_PATCH */), [[_vShow, $data.imageSave]]), _withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    \"class\": \"uploadButton\",\n    style: {\n      \"margin-bottom\": \"20px\"\n    },\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $options.saveJSON && $options.saveJSON.apply($options, arguments);\n    })\n  }, \"Save List\"), _createElementVNode(\"input\", {\n    \"class\": \"uploadButton\",\n    type: \"file\",\n    id: \"selectFiles\",\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.uploadJSON && $options.uploadJSON.apply($options, arguments);\n    })\n  }), _hoisted_3], 512 /* NEED_PATCH */), [[_vShow, $data.jsonSave]])], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vShow, $data.show]]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","ref","tabindex","onBlur","_cache","$options","close","apply","arguments","onClick","_hoisted_1","_hoisted_2","$event","saveAsImage","$data","imageSave","style","saveJSON","type","uploadJSON","_hoisted_3","jsonSave","show"],"sources":["/Users/shan/SER375/src/components/ListSaver.vue"],"sourcesContent":["<template>\n    <div class=\"listSaver\" v-show=\"show\" ref=\"saver\" tabindex=\"0\" @blur=\"close\">\n        <button class=\"closeUpload\" @click=\"close\">╳</button>\n        <button>Save as JSON</button>\n        <button>Save as Image</button>\n        <div v-show=\"imageSave\">\n            <button class=\"uploadButton\" @click=\"saveAsImage('')\">Save Full List</button>\n            <button class=\"uploadButton\" @click=\"saveAsImage\">Save List</button>\n        </div>\n        <div v-show=\"jsonSave\">\n            <button class=\"uploadButton\" style=\"margin-bottom: 20px\" @click=\"saveJSON\">Save List</button>\n            <input class=\"uploadButton\" type=\"file\" id=\"selectFiles\" @click=\"uploadJSON\" />\n            <button class=\"uploadButton\" id=\"import\">Upload List</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"ListSaver\",\n    data() {\n        return {\n            show: false,\n            fireSaveData: {},\n            jsonSave: false,\n            imageSave: false,\n        }\n    },\n    methods: {\n        async initialize() {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n            this.currUser = currentUser;\n            const userDoc = await this.$db.collection(\"users\").doc(currentUser.uid).get();\n            const saveData = userDoc.data();\n            this.fireSaveData = saveData;\n        },\n        close() {\n            this.show = false;\n        },\n        open() {\n            this.show = true;\n        },\n        uploadJSON() {\n            document.getElementById(\"import\").onclick = () => {\n                const files = document.getElementById(\"selectFiles\").files;\n                if (files.length <= 0) {\n                    return false;\n                }\n\n                const fr = new FileReader();\n\n                fr.onload = (e) => {\n                    const result = JSON.parse(e.target.result);\n                    this.fireSaveData = result;\n\n                    this.$db.collection(\"users\").doc(this.currUser.uid).set(this.fireSaveData);\n\n                    this.homePageArrays = [];\n                    for (let i = 0; i < this.fireSaveData.categories.length; i++) {\n                        this.homePageArrays.push(this.fireSaveData.categories[i].people);\n                    }\n                    this.testArray = [];\n                    for (let i = 1; i < this.fireSaveData.categories.length; i++) {\n                        this.testArray.push(this.fireSaveData.categories[i]);\n                    }\n                };\n                fr.readAsText(files.item(0));\n                this.showFileUploader = false;\n            };\n        },\n        saveJSON() {\n            var a = document.createElement(\"a\");\n            var file = new Blob([JSON.stringify(this.fireSaveData)], { type: 'application/json' });\n            a.href = URL.createObjectURL(file);\n            a.download = 'exportSaveData.json';\n            a.click();\n            this.showFileUploader = false;\n        },\n        saveAsImage(id) {\n            html2canvas(document.getElementById(id)).then(canvas => {\n                var link = document.createElement('a');\n\n                if (typeof link.download === 'string') {\n                    link.href = canvas.toDataURL();\n                    link.download = 'aaa.jpeg';\n\n                    //Firefox requires the link to be in the body\n                    document.body.appendChild(link);\n                    //simulate click\n                    link.click();\n                    //remove the link when done\n                    document.body.removeChild(link);\n\n                } else {\n                    window.open(canvas.toDataURL());\n                }\n            });\n        }\n    }\n}\n</script>\n\n<style scoped>\n.listSaver {\n    background: white;\n    border-radius: 5px;\n    box-shadow: 0px 0px 5px black;\n    font-size: 13px;\n    height: fit-content;\n    margin: auto;\n    padding: 5px 10px;\n    line-height: 1px;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 300px;\n    z-index: 999;\n}\n\n.uploadButton {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    padding: 7px 15px;\n    text-align: center;\n    text-decoration: none;\n    width: 100%;\n}\n\n.uploadButton:hover {\n    background-color: #505cc7;\n}\n\n.closeUpload {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: block;\n    float: right;\n    font-size: 16px;\n    margin-bottom: 20px;\n    text-align: center;\n    text-decoration: none;\n}\n\n.closeUpload:hover {\n    background-color: #505cc7;\n}\n</style>"],"mappings":";;;;;sBAGQA,mBAAA,CAA6B,gBAArB,cAAY;AAAA;;sBACpBA,mBAAA,CAA8B,gBAAtB,eAAa;AAAA;;sBAQjBA,mBAAA,CAA6D;IAArD,SAAM,cAAc;IAACC,EAAE,EAAC;KAAS,aAAW;AAAA;;wCAX5DC,mBAAA,CAaM;IAbD,SAAM,WAAW;IAAeC,GAAG,EAAC,OAAO;IAACC,QAAQ,EAAC,GAAG;IAAEC,MAAI,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAK;IAAA;MACtEV,mBAAA,CAAqD;IAA7C,SAAM,aAAa;IAAEW,OAAK,EAAAL,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAK;IAAA;KAAE,GAAC,GAC5CE,UAA6B,EAC7BC,UAA8B,E,gBAC9Bb,mBAAA,CAGM,cAFFA,mBAAA,CAA6E;IAArE,SAAM,cAAc;IAAEW,OAAK,EAAAL,MAAA,QAAAA,MAAA,gBAAAQ,MAAA;MAAA,OAAEP,QAAA,CAAAQ,WAAW;IAAA;KAAM,gBAAc,GACpEf,mBAAA,CAAoE;IAA5D,SAAM,cAAc;IAAEW,OAAK,EAAAL,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAQ,WAAA,IAAAR,QAAA,CAAAQ,WAAA,CAAAN,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAW;IAAA;KAAE,WAAS,E,mCAFlDM,KAAA,CAAAC,SAAS,E,mBAItBjB,mBAAA,CAIM,cAHFA,mBAAA,CAA6F;IAArF,SAAM,cAAc;IAACkB,KAA2B,EAA3B;MAAA;IAAA,CAA2B;IAAEP,OAAK,EAAAL,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAY,QAAA,IAAAZ,QAAA,CAAAY,QAAA,CAAAV,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAQ;IAAA;KAAE,WAAS,GACpFV,mBAAA,CAA+E;IAAxE,SAAM,cAAc;IAACoB,IAAI,EAAC,MAAM;IAACnB,EAAE,EAAC,aAAa;IAAEU,OAAK,EAAAL,MAAA,QAAAA,MAAA;MAAA,OAAEC,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;MAC3EY,UAA6D,C,mCAHpDN,KAAA,CAAAO,QAAQ,E,sDARMP,KAAA,CAAAQ,IAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}