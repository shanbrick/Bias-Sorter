{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport groupListEdit from \"@/groupListEdit.json\";\nexport default {\n  name: \"GroupInfoView\",\n  mounted() {},\n  data() {\n    return {\n      groupList: groupListEdit,\n      group: JSON.parse(localStorage.getItem(\"selectedGroup\")),\n      saveData: JSON.parse(localStorage.getItem(\"save_data\"))\n    };\n  },\n  methods: {\n    addToUnsorted(grpName, stageName, stageKR, fullName, fullKR, birthday, imgLink, afr) {\n      if (stageName === grpName) {\n        this.saveData.categories[0].people.push({\n          grpName: \"Solo\",\n          stageName: stageName,\n          stageKR: stageKR,\n          fullName: fullName,\n          fullKR: fullKR,\n          birthday: birthday,\n          imgLink: imgLink,\n          afr: afr\n        });\n      } else {\n        this.saveData.categories[0].people.push({\n          grpName: grpName,\n          stageName: stageName,\n          stageKR: stageKR,\n          fullName: fullName,\n          fullKR: fullKR,\n          birthday: birthday,\n          imgLink: imgLink,\n          afr: afr\n        });\n      }\n      localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n    },\n    checkPerson(input) {\n      for (var i = 0; i < this.saveData.categories.length; i++) {\n        let array = this.saveData.categories[i].people;\n        for (var j = 0; j < array.length; j++) {\n          if (array[j].imgLink === input) {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n    populateGroupPage(groupInput) {\n      if (this.group === null) {\n        this.group = [];\n      }\n      let groupArray = [];\n      for (var i = 0; i < this.groupList.length; i++) {\n        if (this.groupList[i].groupName === groupInput) {\n          groupArray = this.groupList[i];\n          break;\n        }\n      }\n      localStorage.setItem(\"selectedGroup\", JSON.stringify(groupArray));\n      this.group = JSON.parse(localStorage.getItem(\"selectedGroup\"));\n    },\n    removeFromHome(person) {\n      for (let i = 0; i < this.saveData.categories.length; i++) {\n        for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n          if (this.saveData.categories[i].people[j].imgLink === person.imgLink) {\n            this.saveData.categories[i].people = this.saveData.categories[i].people.filter(p => {\n              return p.imgLink !== person.imgLink;\n            });\n            localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n            break;\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    active: function () {\n      let arr = this.group.members;\n      return arr.filter(i => i.afr === \"a\");\n    },\n    former: function () {\n      let arr = this.group.members;\n      return arr.filter(i => i.afr !== \"a\");\n    }\n  }\n};","map":{"version":3,"names":["groupListEdit","name","mounted","data","groupList","group","JSON","parse","localStorage","getItem","saveData","methods","addToUnsorted","grpName","stageName","stageKR","fullName","fullKR","birthday","imgLink","afr","categories","people","push","setItem","stringify","checkPerson","input","i","length","array","j","populateGroupPage","groupInput","groupArray","groupName","removeFromHome","person","filter","p","computed","active","arr","members","former"],"sources":["/Users/shan/SER375/bias-sorter/src/views/GroupInfoView.vue"],"sourcesContent":["<template>\n    <div class=\"groupInfoDiv\">\n        <img class=\"fullGroupPic\" :src=\"require('../assets/imageArchive/' + group.imgLink)\" />\n        <p class=\"groupName\">{{ group.groupName }} ({{ group.groupKR }})</p>\n        <p><i style=\"font-weight: bold\">Company:</i> {{ group.company }}</p>\n        <p><i style=\"font-weight: bold\">Debut:</i> {{ group.debutDate }}</p>\n    </div>\n    <div class=\"bigBox\">\n        <div v-for=\"person in active\" class=\"memberDivs\">\n            <img class=\"memberPic\" :src=\"require('../assets/imageArchive/' + person.imgLink)\" />\n            <p class=\"memberName\">{{ person.stageName }} ({{ person.stageKR }})</p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Full Name:</i> {{ person.fullName }}\n            </p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Korean Name:</i> {{ person.fullKR }}\n            </p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Birthday:</i> {{ person.birthday }}\n            </p>\n            <button v-if=\"checkPerson(person.imgLink)\" @click=\"removeFromHome(person)\" class=\"added\">\n                Added\n            </button>\n            <button v-else-if=\"person.afr !== 'a' && person.afr !== 'f'\" @click=\"populateGroupPage(person.afr)\">\n                ➜\n            </button>\n            <button v-else @click=\"\n                addToUnsorted(\n                    person.grpName,\n                    person.stageName,\n                    person.stageKR,\n                    person.fullName,\n                    person.fullKR,\n                    person.birthday,\n                    person.imgLink,\n                    person.afr\n                )\n                \">\n                Add\n            </button>\n        </div>\n    </div>\n    <div class=\"bigBox\">\n        <div v-for=\"person in former\" class=\"memberDivs\">\n            <p class=\"former\">Former Member:</p>\n            <img class=\"memberPic\" :src=\"require('../assets/imageArchive/' + person.imgLink)\" />\n            <p class=\"memberName\">{{ person.stageName }} ({{ person.stageKR }})</p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Full Name:</i> {{ person.fullName }}\n            </p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Korean Name:</i> {{ person.fullKR }}\n            </p>\n            <p class=\"memberInfo\">\n                <i style=\"font-weight: bold\">Birthday:</i> {{ person.birthday }}\n            </p>\n            <button v-if=\"checkPerson(person.imgLink)\" class=\"added\">Added</button>\n            <button v-else-if=\"person.afr !== 'a' && person.afr !== 'f'\" @click=\"populateGroupPage(person.afr)\">\n                ➜\n            </button>\n            <button v-else @click=\"\n                addToUnsorted(\n                    person.grpName,\n                    person.stageName,\n                    person.stageKR,\n                    person.fullName,\n                    person.fullKR,\n                    person.birthday,\n                    person.imgLink,\n                    person.afr\n                )\n                \">\n                Add\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\n\nexport default {\n    name: \"GroupInfoView\",\n    mounted() { },\n    data() {\n        return {\n            groupList: groupListEdit,\n            group: JSON.parse(localStorage.getItem(\"selectedGroup\")),\n            saveData: JSON.parse(localStorage.getItem(\"save_data\")),\n        };\n    },\n    methods: {\n        addToUnsorted(grpName, stageName, stageKR, fullName, fullKR, birthday, imgLink, afr) {\n            if (stageName === grpName) {\n                this.saveData.categories[0].people.push({\n                    grpName: \"Solo\",\n                    stageName: stageName,\n                    stageKR: stageKR,\n                    fullName: fullName,\n                    fullKR: fullKR,\n                    birthday: birthday,\n                    imgLink: imgLink,\n                    afr: afr,\n                });\n            } else {\n                this.saveData.categories[0].people.push({\n                    grpName: grpName,\n                    stageName: stageName,\n                    stageKR: stageKR,\n                    fullName: fullName,\n                    fullKR: fullKR,\n                    birthday: birthday,\n                    imgLink: imgLink,\n                    afr: afr,\n                });\n            }\n            localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n        },\n        checkPerson(input) {\n            for (var i = 0; i < this.saveData.categories.length; i++) {\n                let array = this.saveData.categories[i].people;\n                for (var j = 0; j < array.length; j++) {\n                    if (array[j].imgLink === input) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        populateGroupPage(groupInput) {\n            if (this.group === null) {\n                this.group = [];\n            }\n            let groupArray = [];\n            for (var i = 0; i < this.groupList.length; i++) {\n                if (this.groupList[i].groupName === groupInput) {\n                    groupArray = this.groupList[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(groupArray));\n            this.group = JSON.parse(localStorage.getItem(\"selectedGroup\"));\n        },\n        removeFromHome(person) {\n            for (let i = 0; i < this.saveData.categories.length; i++) {\n                for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n                    if (this.saveData.categories[i].people[j].imgLink === person.imgLink) {\n                        this.saveData.categories[i].people = this.saveData.categories[\n                            i\n                        ].people.filter((p) => {\n                            return p.imgLink !== person.imgLink;\n                        });\n                        localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n                        break;\n                    }\n                }\n            }\n        },\n    },\n    computed: {\n        active: function () {\n            let arr = this.group.members;\n            return arr.filter((i) => i.afr === \"a\");\n        },\n        former: function () {\n            let arr = this.group.members;\n            return arr.filter((i) => i.afr !== \"a\");\n        },\n    },\n};\n</script>\n\n<style scoped>\n.bigBox {\n    align-content: center;\n    /* border: 1px solid red; */\n    border-radius: 10px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 20px auto 20px;\n    max-width: 1095px;\n    padding: 20px;\n    text-align: center;\n    width: 100%;\n}\n\n.bigBox:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.groupInfoDiv {\n    height: fit-content;\n    width: fit-content;\n    text-align: center;\n    padding: 40px;\n    padding-bottom: 20px;\n    margin: auto;\n    margin-top: 20px;\n    margin-bottom: 10px;\n    border-radius: 8px;\n    background-color: #edecff;\n    /* background-image: linear-gradient(#747fe6, #b3b8e9); */\n    background: radial-gradient(#ffffff, #dadada);\n    box-shadow: 0px 0px 5px black;\n}\n\n.fullGroupPic {\n    height: 400px;\n    border: 1px solid #848484;\n    border-radius: 8px;\n}\n\n.groupName {\n    padding-left: 0px;\n    padding-top: 0px;\n    margin-bottom: 30px;\n    line-height: 0px;\n    font-size: 25px;\n    font-weight: bolder;\n}\n\n.groupInfo {\n    padding-left: 0px;\n    padding-top: 0px;\n    line-height: 0px;\n    font-size: 25px;\n}\n\n.memberDivs {\n    float: left;\n    height: fit-content;\n    /* width: 310px; */\n    width: 29%;\n    text-align: center;\n    padding: 20px;\n    margin: 20px;\n    border-radius: 8px;\n    background-color: #edecff;\n    /* background-image: linear-gradient(#747fe6, #b3b8e9); */\n    background: radial-gradient(#ffffff, #dadada);\n    box-shadow: 0px 0px 5px black;\n}\n\n.memberPic {\n    /* width: 270px; */\n    width: 100%;\n    border: 1px solid #848484;\n    border-radius: 8px;\n    margin-bottom: 5px;\n}\n\n.former {\n    font-size: 20px;\n    text-align: center;\n    padding-top: 0px;\n    margin-top: 0px;\n    margin-bottom: 12px;\n    font-weight: bold;\n}\n\n.memberName {\n    font-size: 20px;\n    text-align: center;\n    margin: 5px;\n    font-weight: bold;\n}\n\n.memberInfo {\n    font-size: 14px;\n    text-align: center;\n    margin: 5px;\n}\n\nbutton {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    padding: 7px 15px;\n    text-align: center;\n    text-decoration: none;\n}\n\n.added {\n    background-color: #747fe6;\n    border: 1px solid #898989;\n    color: #474747;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}