{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport groupListEdit from \"@/groupListEdit.json\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nimport ContextMenu from '../components/ContextMenu.vue';\nimport { useCurrentUser, useDocument, useFirestore } from 'vuefire';\nimport { collection, doc } from 'firebase/firestore';\nexport default {\n  name: 'ListView',\n  order: 1,\n  components: {\n    draggable,\n    ContextMenu\n  },\n  props: [],\n  data() {\n    return {\n      saveData: {\n        \"categories\": [{\n          \"catName\": \"Unsorted\",\n          \"people\": []\n        }, {\n          \"catName\": \"Ults\",\n          \"people\": []\n        }, {\n          \"catName\": \"Semis\",\n          \"people\": []\n        }, {\n          \"catName\": \"Regs\",\n          \"people\": []\n        }]\n      },\n      homePageArrays: ref([]),\n      testArray: ref([]),\n      editModeOn: false,\n      showContextMenu: false,\n      showContextMenuCat: false,\n      showFileUploader: false,\n      clickedPerson: {},\n      clickedCat: {},\n      groups: groupListEdit\n    };\n  },\n  mounted() {\n    // const auth = getAuth();\n    // onAuthStateChanged(auth, (user) => {\n    //     if (user) {\n    //         this.initialize();\n    //     }\n    // });\n\n    if (localStorage.getItem(\"save_data\") !== null) {\n      const saveDataFromStorage = JSON.parse(localStorage.getItem(\"save_data\"));\n      this.saveData = saveDataFromStorage;\n    } else {\n      localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n    }\n    for (let i = 0; i < this.saveData.categories.length; i++) {\n      this.homePageArrays.push(this.saveData.categories[i].people);\n    }\n    for (let i = 1; i < this.saveData.categories.length; i++) {\n      this.testArray.push(this.saveData.categories[i]);\n    }\n  },\n  computed: {},\n  methods: {\n    initialize() {\n      const currentUser = useCurrentUser();\n      const db = useFirestore();\n      console.log(\"currentUser\", currentUser);\n      const userData = useDocument(doc(collection(db, \"users\"), currentUser.value.uid));\n      console.log(\"users\", collection(db, \"users\"));\n      console.log(\"currentUser\", currentUser.value);\n      console.log(\"userData\", userData);\n      console.log(\"user.value\", userData.value);\n    },\n    addNewCategory() {\n      let arr = {\n        \"catName\": \"Untitled\",\n        \"people\": []\n      };\n      this.saveData.categories.push(arr);\n      localStorage.setItem('save_data', JSON.stringify(this.saveData));\n      this.testArray.push(arr);\n      this.homePageArrays.push(arr.people);\n    },\n    toggleEditModeOn() {\n      this.editModeOn = !this.editModeOn;\n    },\n    toggleEditModeOff() {\n      this.editModeOn = !this.editModeOn;\n      window.location.reload();\n    },\n    updateCatOrder(arr) {\n      console.log(\"update cat order\", arr);\n      for (let i = 0; i < arr.length; i++) {\n        this.saveData.categories[i + 1] = arr[i];\n      }\n      console.log(\"saveData categpories\", this.saveData.categories);\n      localStorage.setItem('save_data', JSON.stringify(this.saveData));\n    },\n    updateStorage(i, array) {\n      this.saveData.categories[i].people = array;\n      localStorage.setItem('save_data', JSON.stringify(this.saveData));\n    },\n    updateCatName(i) {\n      this.saveData.categories[i].catName;\n      localStorage.setItem('save_data', JSON.stringify(this.saveData));\n    },\n    openContextMenu(e, person) {\n      this.clickedPerson = person;\n      console.log(this.clickedPerson);\n      this.$refs.menu.open(e);\n    },\n    openContextMenuCat(e, category) {\n      this.clickedCat = category;\n      console.log(this.clickedCat);\n      this.$refs.menuCat.open(e);\n    },\n    openFileUploader() {\n      this.showFileUploader = true;\n    },\n    removeFromHome(e) {\n      this.$refs.menu.close(e);\n      for (let i = 0; i < this.saveData.categories.length; i++) {\n        for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n          if (this.saveData.categories[i].people[j].imgLink === this.clickedPerson.imgLink) {\n            this.saveData.categories[i].people = this.saveData.categories[i].people.filter(p => {\n              return p.imgLink !== this.clickedPerson.imgLink;\n            });\n            localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n            this.homePageArrays = [];\n            for (let i = 0; i < this.saveData.categories.length; i++) {\n              this.homePageArrays.push(this.saveData.categories[i].people);\n            }\n            break;\n          }\n        }\n      }\n    },\n    removeFromHomeCat(e) {\n      this.$refs.menu.close(e);\n      console.log(this.clickedCat);\n      // for (let i = 0; i < this.saveData.categories.length; i++) {\n      //     for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n      //         if (this.saveData.categories[i].people[j].imgLink === this.clickedPerson.imgLink) {\n      //             this.saveData.categories[i].people = this.saveData.categories[\n      //                 i\n      //             ].people.filter((p) => {\n      //                 return p.imgLink !== this.clickedPerson.imgLink;\n      //             });\n      //             localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n      //             this.homePageArrays = [];\n      //             for (let i = 0; i < this.saveData.categories.length; i++) {\n      //                 this.homePageArrays.push(this.saveData.categories[i].people);\n      //             }\n      //             break;\n      //         }\n      //     }\n      // }\n    },\n    populateGroupPage(grpName) {\n      let selectedGroup = [];\n      for (let i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].groupName === grpName) {\n          selectedGroup = this.groups[i];\n          break;\n        }\n      }\n      localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n    },\n    saveJSON() {\n      var a = document.createElement(\"a\");\n      var file = new Blob([localStorage.getItem(\"save_data\")], {\n        type: 'application/json'\n      });\n      a.href = URL.createObjectURL(file);\n      a.download = 'exportSaveData.json';\n      a.click();\n      this.showFileUploader = false;\n    },\n    uploadFile() {\n      document.getElementById(\"import\").onclick = () => {\n        const files = document.getElementById(\"selectFiles\").files;\n        if (files.length <= 0) {\n          return false;\n        }\n        const fr = new FileReader();\n        fr.onload = e => {\n          const result = JSON.parse(e.target.result);\n          this.saveData = result;\n          localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n          this.homePageArrays = [];\n          for (let i = 0; i < this.saveData.categories.length; i++) {\n            this.homePageArrays.push(this.saveData.categories[i].people);\n          }\n          this.testArray = [];\n          for (let i = 1; i < this.saveData.categories.length; i++) {\n            this.testArray.push(this.saveData.categories[i]);\n          }\n        };\n        fr.readAsText(files.item(0));\n        this.showFileUploader = false;\n      };\n    }\n  }\n};","map":{"version":3,"names":["groupListEdit","ref","draggable","ContextMenu","useCurrentUser","useDocument","useFirestore","collection","doc","name","order","components","props","data","saveData","homePageArrays","testArray","editModeOn","showContextMenu","showContextMenuCat","showFileUploader","clickedPerson","clickedCat","groups","mounted","localStorage","getItem","saveDataFromStorage","JSON","parse","setItem","stringify","i","categories","length","push","people","computed","methods","initialize","currentUser","db","console","log","userData","value","uid","addNewCategory","arr","toggleEditModeOn","toggleEditModeOff","window","location","reload","updateCatOrder","updateStorage","array","updateCatName","catName","openContextMenu","e","person","$refs","menu","open","openContextMenuCat","category","menuCat","openFileUploader","removeFromHome","close","j","imgLink","filter","p","removeFromHomeCat","populateGroupPage","grpName","selectedGroup","groupName","saveJSON","a","document","createElement","file","Blob","type","href","URL","createObjectURL","download","click","uploadFile","getElementById","onclick","files","fr","FileReader","onload","result","target","readAsText","item"],"sources":["/Users/shan/SER375/bias-sorter/src/views/ListView.vue"],"sourcesContent":["<template>\n    <div class=\"topBar\">\n        <button class=\"topBarButton\" @click=\"openFileUploader()\">&nbsp;↥&nbsp;Upload/Save List</button>\n        <button class=\"topBarButton\" @click=\"addNewCategory()\">&nbsp;+&nbsp; Add New Category</button>\n        <button class=\"topBarButton\" @click=\"toggleEditModeOn()\" v-if=\"!editModeOn\">&nbsp;✎&nbsp; Edit\n            Categories</button>\n        <button class=\"topBarButton\" @click=\"toggleEditModeOff()\" v-else>&nbsp;✓&nbsp; Save Categories</button>\n    </div>\n\n    <ContextMenu :display=\"showContextMenu\" ref=\"menu\">\n        <button class=\"contextButton\" @click=\"removeFromHome()\">Remove {{ clickedPerson.stageName }}</button>\n    </ContextMenu>\n\n    <ContextMenu :display=\"showContextMenuCat\" ref=\"menuCat\">\n        <button class=\"contextButton\" @click=\"removeFromHomeCat()\">Remove category and move people to\n            Unsorted</button>\n        <br>\n        <button class=\"contextButton\" @click=\"removeFromHomeCat()\">Remove category and people</button>\n    </ContextMenu>\n\n    <div class=\"upload\" v-show=\"showFileUploader\">\n        <button class=\"uploadButton\" style=\"margin-bottom: 20px\" @click=\"saveJSON()\">Save List</button>\n        <input class=\"uploadButton\" type=\"file\" id=\"selectFiles\" @click=\"uploadFile\" />\n        <button class=\"uploadButton\" id=\"import\">Upload List</button>\n    </div>\n\n    <div id=\"unsorted\" class=\"unsorted\" oncontextmenu=\"return false;\">\n        <div class=\"boxHeaderUnsorted\">\n            <p class=\"categoryTitle\">Unsorted</p>\n        </div>\n        <div class=\"unsortedPeople\">\n            <draggable :list=\"homePageArrays[0]\" group=\"everyone\" :animation=\"300\"\n                @change=\"updateStorage(0, homePageArrays[0])\" :disabled=\"editModeOn\" item-key=\"a\">\n                <template #item=\"{ element }\">\n                    <div class=\"peopleDivss\" :key=\"element.stageName\">\n                        <img oncontextmenu=\"return false;\" v-on:click.right=\"openContextMenu($event, element)\"\n                            class=\"homePeoplePics\" :src=\"require('../assets/imageArchive/' + element.imgLink)\">\n                        <p class=\"idolName\">{{ element.stageName }}</p>\n                        <a href=\"/groupPage\" @click=\"populateGroupPage(element.grpName)\">\n                            <p class=\"groupName\">{{ element.grpName }}</p>\n                        </a>\n                    </div>\n                </template>\n            </draggable>\n        </div>\n    </div>\n\n\n    <div class=\"sideCats\" oncontextmenu=\"return false;\">\n        <draggable :list=\"testArray\" :animation=\"300\" @change=\"updateCatOrder(testArray)\" :disabled=\"!editModeOn\"\n            item-key=\"b\">\n            <template #item=\"{ element: catArr, index }\">\n                <div :id=catArr class=\"categories\">\n                    <div class=\"boxHeaderCategories\" v-on:click.right=\"openContextMenuCat($event, catArr)\">\n                        <div v-if=\"!editModeOn\">\n                            <p class=\"categoryTitle\">{{ catArr.catName }}</p>\n                        </div>\n                        <div v-else>\n                            <input class=\"boxHeaderCatsInput\" type=\"text\" v-model=\"catArr.catName\"\n                                v-on:input=\"updateCatName(index + 1)\"></input>\n                        </div>\n                    </div>\n                    <div v-if=\"!editModeOn\">\n                        <draggable :list=\"homePageArrays[index + 1]\" group=\"everyone\" :animations=\"300\"\n                            @change=\"updateStorage(index + 1, homePageArrays[index + 1])\" :disabled=\"editModeOn\"\n                            item-key=\"c\">\n                            <template #item=\"{ element: pers }\">\n                                <div class=\"peopleDivss\">\n                                    <img oncontextmenu=\"return false;\" v-on:click.right=\"openContextMenu($event, pers)\"\n                                        class=\"homePeoplePics\" :src=\"require('../assets/imageArchive/' + pers.imgLink)\">\n                                    <p class=\"idolName\">{{ pers.stageName }}</p>\n                                    <a href=\"/groupPage\" @click=\"populateGroupPage(pers.grpName)\">\n                                        <p class=\"groupName\">{{ pers.grpName }}</p>\n                                    </a>\n                                </div>\n                            </template>\n                        </draggable>\n                    </div>\n                </div>\n            </template>\n        </draggable>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\nimport { ref } from 'vue';\nimport draggable from 'vuedraggable';\nimport ContextMenu from '../components/ContextMenu.vue';\nimport { useCurrentUser, useDocument, useFirestore } from 'vuefire';\nimport { collection, doc } from 'firebase/firestore';\n\nexport default {\n    name: 'ListView',\n    order: 1,\n    components: {\n        draggable,\n        ContextMenu,\n    },\n    props: [\n\n    ],\n    data() {\n        return {\n            saveData: {\n                \"categories\": [\n                    {\n                        \"catName\": \"Unsorted\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Ults\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Semis\",\n                        \"people\": []\n                    },\n                    {\n                        \"catName\": \"Regs\",\n                        \"people\": []\n                    }\n                ]\n            },\n            homePageArrays: ref([]),\n            testArray: ref([]),\n            editModeOn: false,\n            showContextMenu: false,\n            showContextMenuCat: false,\n            showFileUploader: false,\n            clickedPerson: {},\n            clickedCat: {},\n            groups: groupListEdit\n        }\n    },\n    mounted() {\n        // const auth = getAuth();\n        // onAuthStateChanged(auth, (user) => {\n        //     if (user) {\n        //         this.initialize();\n        //     }\n        // });\n\n        if (localStorage.getItem(\"save_data\") !== null) {\n            const saveDataFromStorage = JSON.parse(localStorage.getItem(\"save_data\"))\n            this.saveData = saveDataFromStorage\n        } else {\n            localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n        }\n\n        for (let i = 0; i < this.saveData.categories.length; i++) {\n            this.homePageArrays.push(this.saveData.categories[i].people);\n        }\n\n        for (let i = 1; i < this.saveData.categories.length; i++) {\n            this.testArray.push(this.saveData.categories[i]);\n        }\n    },\n    computed: {\n\n    },\n    methods: {\n        initialize() {\n            const currentUser = useCurrentUser();\n            const db = useFirestore();\n            console.log(\"currentUser\", currentUser);\n\n            const userData = useDocument(doc(collection(db, \"users\"), currentUser.value.uid));\n\n            console.log(\"users\", collection(db, \"users\"));\n            console.log(\"currentUser\", currentUser.value);\n            console.log(\"userData\", userData);\n            console.log(\"user.value\", userData.value);\n        },\n        addNewCategory() {\n            let arr = {\n                \"catName\": \"Untitled\",\n                \"people\": []\n            }\n            this.saveData.categories.push(arr);\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n\n            this.testArray.push(arr)\n            this.homePageArrays.push(arr.people);\n\n        },\n        toggleEditModeOn() {\n            this.editModeOn = !this.editModeOn;\n        },\n        toggleEditModeOff() {\n            this.editModeOn = !this.editModeOn;\n            window.location.reload();\n        },\n        updateCatOrder(arr) {\n            console.log(\"update cat order\", arr)\n            for (let i = 0; i < arr.length; i++) {\n                this.saveData.categories[i + 1] = arr[i];\n            }\n            console.log(\"saveData categpories\", this.saveData.categories);\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        updateStorage(i, array) {\n            this.saveData.categories[i].people = array;\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        updateCatName(i) {\n            this.saveData.categories[i].catName;\n            localStorage.setItem('save_data', JSON.stringify(this.saveData));\n        },\n        openContextMenu(e, person) {\n            this.clickedPerson = person;\n            console.log(this.clickedPerson);\n            this.$refs.menu.open(e);\n        },\n        openContextMenuCat(e, category) {\n            this.clickedCat = category;\n            console.log(this.clickedCat);\n            this.$refs.menuCat.open(e);\n        },\n        openFileUploader() {\n            this.showFileUploader = true;\n        },\n        removeFromHome(e) {\n            this.$refs.menu.close(e);\n            for (let i = 0; i < this.saveData.categories.length; i++) {\n                for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n                    if (this.saveData.categories[i].people[j].imgLink === this.clickedPerson.imgLink) {\n                        this.saveData.categories[i].people = this.saveData.categories[\n                            i\n                        ].people.filter((p) => {\n                            return p.imgLink !== this.clickedPerson.imgLink;\n                        });\n                        localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n                        this.homePageArrays = [];\n                        for (let i = 0; i < this.saveData.categories.length; i++) {\n                            this.homePageArrays.push(this.saveData.categories[i].people);\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n        removeFromHomeCat(e) {\n            this.$refs.menu.close(e);\n            console.log(this.clickedCat);\n            // for (let i = 0; i < this.saveData.categories.length; i++) {\n            //     for (let j = 0; j < this.saveData.categories[i].people.length; j++) {\n            //         if (this.saveData.categories[i].people[j].imgLink === this.clickedPerson.imgLink) {\n            //             this.saveData.categories[i].people = this.saveData.categories[\n            //                 i\n            //             ].people.filter((p) => {\n            //                 return p.imgLink !== this.clickedPerson.imgLink;\n            //             });\n            //             localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n            //             this.homePageArrays = [];\n            //             for (let i = 0; i < this.saveData.categories.length; i++) {\n            //                 this.homePageArrays.push(this.saveData.categories[i].people);\n            //             }\n            //             break;\n            //         }\n            //     }\n            // }\n        },\n        populateGroupPage(grpName) {\n            let selectedGroup = [];\n            for (let i = 0; i < this.groups.length; i++) {\n                if (this.groups[i].groupName === grpName) {\n                    selectedGroup = this.groups[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n        },\n        saveJSON() {\n            var a = document.createElement(\"a\");\n            var file = new Blob([localStorage.getItem(\"save_data\")], { type: 'application/json' });\n            a.href = URL.createObjectURL(file);\n            a.download = 'exportSaveData.json';\n            a.click();\n            this.showFileUploader = false;\n        },\n        uploadFile() {\n            document.getElementById(\"import\").onclick = () => {\n                const files = document.getElementById(\"selectFiles\").files;\n                if (files.length <= 0) {\n                    return false;\n                }\n\n                const fr = new FileReader();\n\n                fr.onload = (e) => {\n                    const result = JSON.parse(e.target.result);\n                    this.saveData = result;\n                    localStorage.setItem(\"save_data\", JSON.stringify(this.saveData));\n                    this.homePageArrays = [];\n                    for (let i = 0; i < this.saveData.categories.length; i++) {\n                        this.homePageArrays.push(this.saveData.categories[i].people);\n                    }\n                    this.testArray = [];\n                    for (let i = 1; i < this.saveData.categories.length; i++) {\n                        this.testArray.push(this.saveData.categories[i]);\n                    }\n                };\n                fr.readAsText(files.item(0));\n                this.showFileUploader = false;\n            };\n        },\n    }\n}\n</script>\n\n<style scoped>\n.topBar {\n    background-color: #b3b8e9;\n    display: flex;\n    gap: 10px;\n    height: 50px;\n    margin: 0px 0px 20px;\n    padding: 9px;\n    overflow: hidden;\n}\n\n.sticky {\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n\n.topBarButton {\n    background: #00000000;\n    border: 1px solid #00000000;\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    height: 30px;\n    margin: auto;\n    text-align: center;\n    text-decoration: none;\n    width: fit-content;\n}\n\n.topBarButton:hover {\n    background-color: #505cc7;\n}\n\n.unsorted {\n    background: linear-gradient(180deg, rgba(179, 184, 233, 1) 0px, rgba(116, 127, 230, 1) 45px, rgba(218, 218, 218, 1) 45px, rgba(255, 255, 255, 1) 63%, rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    height: 60%;\n    margin: 0px 20px 20px;\n    overflow-x: hidden;\n    padding: 55px 0px 10px;\n    position: fixed;\n    width: 342px;\n    z-index: 0;\n}\n\n.unsortedPeople {\n    position: fixed;\n    overflow-x: hidden;\n    width: 342px;\n    height: 51%;\n}\n\n.boxHeaderUnsorted {\n    height: 45px;\n    margin-top: -54px;\n    margin-left: -1px;\n    margin-bottom: 15px;\n    padding-left: 20px;\n    position: fixed;\n    width: 342px;\n}\n\n.sideCats {\n    margin-left: 375px;\n    min-width: 500px;\n}\n\n.categories {\n    background: linear-gradient(180deg, rgba(179, 184, 233, 1) 0px, rgba(116, 127, 230, 1) 45px, rgba(218, 218, 218, 1) 45px, rgba(255, 255, 255, 1) 63%, rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    height: fit-content;\n    margin: 0px 20px 30px;\n    min-height: 50px;\n    padding: 55px 0px 10px;\n    position: relative;\n}\n\n.categoryTitle {\n    color: white;\n    font-size: 20px;\n    font-weight: 700;\n    position: absolute;\n    top: -9.5px;\n}\n\n.categories:after {\n    content: \"\";\n    clear: both;\n    display: table;\n}\n\n.boxHeaderCategories {\n    height: 45px;\n    margin: -55px -1px 10px;\n    padding: 20px;\n    position: relative;\n}\n\n.boxHeaderCatsInput {\n    background-image: linear-gradient(#747fe6, #b3b8e9);\n    border: 1px solid #6e6e6e;\n    border-radius: 8px;\n    box-shadow: inset 0px 0px 2px rgba(0, 0, 0, 0.5);\n    color: #fff;\n    height: 35px;\n    float: left;\n    font-size: 20px;\n    font-weight: 700;\n    margin: -15px -1px 10px -15px;\n    padding: 14px;\n    position: relative;\n}\n\n.idolName {\n    color: black;\n    font-size: 15px;\n    font-weight: bold;\n    margin: 5px;\n    text-align: center;\n}\n\n.groupName {\n    font-size: 0.75em;\n    margin: 5px;\n    text-align: center;\n}\n\n.peopleDivss {\n    /* border: 1px solid red; */\n    float: left;\n    height: fit-content;\n    padding: 5px 0px 5px;\n    text-align: center;\n    width: 170px;\n}\n\n.homePeoplePics {\n    border-radius: 8px;\n    box-shadow: 0px 0px 5px #00000080;\n    margin: 0px;\n    padding: 0px;\n    width: 130px;\n}\n\na {\n    color: black;\n    text-decoration: none;\n}\n\n.upload {\n    background: white;\n    border-radius: 5px;\n    box-shadow: 0px 0px 5px black;\n    font-size: 13px;\n    height: fit-content;\n    margin: auto;\n    padding: 5px 10px;\n    line-height: 1px;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 300px;\n    z-index: 999;\n}\n\n.uploadButton {\n    background-color: #b3b8e9;\n    border: 1px solid #848484;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    padding: 7px 15px;\n    text-align: center;\n    text-decoration: none;\n    width: 100%;\n}\n\n.contextButton {\n    background-color: #ffffff00;\n    border: 1px solid #ffffff00;\n    border-radius: 5px;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 13px;\n    margin: 0px;\n    padding: 8px;\n    text-align: center;\n    text-decoration: none;\n    width: 100%;\n}\n\n.contextButton:hover {\n    background-color: #b3b8e9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}