{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport groupListEdit from \"@/groupListEdit.json\";\nimport boysPlanet from '@/jsons/BoysPlanet.json';\nexport default {\n  name: 'Survival',\n  data: function data() {\n    return {\n      boysPlanet: boysPlanet,\n      groups: groupListEdit\n    };\n  },\n  methods: {\n    findElim: function findElim(name, round) {\n      for (var i = 0; i < this.boysPlanet[0].contestants; i++) {\n        if (this.boysPlanet[0].contestants[i].name === name) {\n          if (round === \"0\") {\n            return contestants[i].firstElim;\n          } else if (round === \"1\") {\n            return contestants[i].secondElim;\n          } else if (round === \"2\") {\n            return contestants[i].thirdElim;\n          } else if (round === \"3\") {\n            return contestants[i].finalEp;\n          }\n        }\n      }\n    },\n    populateGroupPage: function populateGroupPage(grpName) {\n      var selectedGroup = [];\n      for (var i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].groupName === grpName) {\n          selectedGroup = this.groups[i];\n          break;\n        }\n      }\n      localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n      this.$router.push('/groupPage');\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n    }\n  }\n};","map":{"version":3,"names":["groupListEdit","boysPlanet","name","data","groups","methods","findElim","round","i","contestants","firstElim","secondElim","thirdElim","finalEp","populateGroupPage","grpName","selectedGroup","length","groupName","localStorage","setItem","JSON","stringify","$router","push","document","body","scrollTop","documentElement"],"sources":["/Users/shan/SER375/src/views/Survival.vue"],"sourcesContent":["<template>\n    <!-- <table>\n        <tr>\n            <th>Name</th>\n            <th>1st Elim</th>\n            <th>2nd Elim</th>\n            <th>3rd Elim</th>\n            <th>Final Ep</th>\n            <th>Avg. Place</th>\n            <th>Group</th>\n        </tr>\n        <tr v-for=\"contestant in boysPlanet[0].contestants\">\n            <td>{{ contestant.name }}</td>\n            <td>{{ contestant.firstElim }}</td>\n            <td>{{ contestant.secondElim }}</td>\n            <td>{{ contestant.thirdElim }}</td>\n            <td>{{ contestant.finalEp }}</td>\n            <td>{{ contestant.avgPlace }}</td>\n            <td class=\"group\" @click=\"populateGroupPage(contestant.group)\" v-if=\"contestant.group !== '-'\">{{\n                contestant.group }}</td>\n        </tr>\n    </table> -->\n    <div v-for=\"(round, i) in boysPlanet[0].rounds\">\n        <p>{{ round.roundName }}</p>\n        <table v-for=\"performance in round.performances\">\n            <tr>\n                <th>Original Artist</th>\n                <th>Song</th>\n                <th>Team Name</th>\n                <th>Contestants</th>\n                <th>Elimination Rankings</th>\n            </tr>\n            <tr>\n                <td>{{ performance.ogArtist }}</td>\n                <td>{{ performance.songName }}</td>\n                <td>{{ performance.teamName }}</td>\n                <td>\n                    <p v-for=\"contestant in performance.contestants\">{{ contestant }}</p>\n                </td>\n                <td>\n                    <p v-for=\"contestant in performance.contestants\"> 1{{ findElim(contestant, i) }}</p>\n                </td>\n            </tr>\n        </table>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\nimport boysPlanet from '@/jsons/BoysPlanet.json'\n\nexport default {\n    name: 'Survival',\n    data() {\n        return {\n            boysPlanet: boysPlanet,\n            groups: groupListEdit\n        }\n    },\n    methods: {\n        findElim(name, round) {\n            for (let i = 0; i < this.boysPlanet[0].contestants; i++) {\n                if (this.boysPlanet[0].contestants[i].name === name) {\n                    if (round === \"0\") {\n                        return contestants[i].firstElim;\n                    } else if (round === \"1\") {\n                        return contestants[i].secondElim;\n                    } else if (round === \"2\") {\n                        return contestants[i].thirdElim;\n                    } else if (round === \"3\") {\n                        return contestants[i].finalEp;\n                    }\n                }\n            }\n        },\n        populateGroupPage(grpName) {\n            let selectedGroup = [];\n            for (let i = 0; i < this.groups.length; i++) {\n                if (this.groups[i].groupName === grpName) {\n                    selectedGroup = this.groups[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n            this.$router.push('/groupPage')\n            document.body.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n        }\n    }\n}\n</script>\n\n<style scoped>\n.group:hover {\n    color: violet;\n    cursor: pointer;\n}\n</style>"],"mappings":";;;;AAgDA,OAAOA,aAAY,MAAO,sBAAsB;AAChD,OAAOC,UAAS,MAAO,yBAAwB;AAE/C,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHF,UAAU,EAAEA,UAAU;MACtBG,MAAM,EAAEJ;IACZ;EACJ,CAAC;EACDK,OAAO,EAAE;IACLC,QAAQ,WAAAA,SAACJ,IAAI,EAAEK,KAAK,EAAE;MAClB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC,CAACQ,WAAW,EAAED,CAAC,EAAE,EAAE;QACrD,IAAI,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC,CAACQ,WAAW,CAACD,CAAC,CAAC,CAACN,IAAG,KAAMA,IAAI,EAAE;UACjD,IAAIK,KAAI,KAAM,GAAG,EAAE;YACf,OAAOE,WAAW,CAACD,CAAC,CAAC,CAACE,SAAS;UACnC,OAAO,IAAIH,KAAI,KAAM,GAAG,EAAE;YACtB,OAAOE,WAAW,CAACD,CAAC,CAAC,CAACG,UAAU;UACpC,OAAO,IAAIJ,KAAI,KAAM,GAAG,EAAE;YACtB,OAAOE,WAAW,CAACD,CAAC,CAAC,CAACI,SAAS;UACnC,OAAO,IAAIL,KAAI,KAAM,GAAG,EAAE;YACtB,OAAOE,WAAW,CAACD,CAAC,CAAC,CAACK,OAAO;UACjC;QACJ;MACJ;IACJ,CAAC;IACDC,iBAAiB,WAAAA,kBAACC,OAAO,EAAE;MACvB,IAAIC,aAAY,GAAI,EAAE;MACtB,KAAK,IAAIR,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACJ,MAAM,CAACa,MAAM,EAAET,CAAC,EAAE,EAAE;QACzC,IAAI,IAAI,CAACJ,MAAM,CAACI,CAAC,CAAC,CAACU,SAAQ,KAAMH,OAAO,EAAE;UACtCC,aAAY,GAAI,IAAI,CAACZ,MAAM,CAACI,CAAC,CAAC;UAC9B;QACJ;MACJ;MACAW,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACN,aAAa,CAAC,CAAC;MACpE,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,YAAY;MAC9BC,QAAQ,CAACC,IAAI,CAACC,SAAQ,GAAI,CAAC;MAC3BF,QAAQ,CAACG,eAAe,CAACD,SAAQ,GAAI,CAAC;IAC1C;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}