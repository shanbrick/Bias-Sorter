{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport groupListEdit from \"@/groupListEdit.json\";\nimport { useCurrentUser, useDocument, useFirestore } from \"vuefire\";\nimport { collection, doc } from \"firebase/firestore\";\nimport { signInWithPopup, GoogleAuthProvider, getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      groups: groupListEdit,\n      selectedGroupArray: [],\n      birthdayToday: [],\n      currentDate: \"\",\n      monthArray: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      randomGroups: []\n    };\n  },\n  mounted() {\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        this.initialize();\n      } else {}\n    });\n    this.birthdayToday = [];\n    const date = new Date();\n    let month = this.convertMonth(date.getMonth() + 1);\n    let day = date.getDate().toString();\n    this.currentDate = month + \" \" + day;\n    if (day.length === 1) {\n      let old = day;\n      day = \"0\" + old;\n    }\n    let today = month + \" \" + day;\n    for (let i = 0; i < this.groups.length; i++) {\n      for (let j = 0; j < this.groups[i].members.length; j++) {\n        let pb = this.groups[i].members[j].birthday;\n        let pbshort = pb.substring(0, pb.indexOf(\",\"));\n        if (pbshort === today) {\n          this.birthdayToday.push(this.groups[i].members[j]);\n        }\n      }\n    }\n    let ranNumArr = [];\n    while (ranNumArr.length < 6) {\n      let r = Math.floor(Math.random() * this.groups.length);\n      if (ranNumArr.indexOf(r) === -1) {\n        ranNumArr.push(r);\n        this.randomGroups.push(this.groups[r]);\n      }\n    }\n  },\n  methods: {\n    initialize() {\n      const currentUser = useCurrentUser();\n      const db = useFirestore();\n      console.log(\"currentUser\", currentUser.value.uid);\n      const userData = useDocument(doc(collection(db, \"users\"), currentUser.value.uid));\n      console.log(\"users\", collection(db, \"users\"));\n      console.log(\"currentUser\", currentUser);\n      console.log(\"userData\", userData);\n      console.log(\"user.value\", userData.id);\n    },\n    convertBday(birthday) {\n      let month = birthday.substring(0, birthday.indexOf(\" \"));\n      let monthNum = 0;\n      for (let i = 0; i < this.monthArray.length; i++) {\n        if (month === this.monthArray[i]) {\n          monthNum = i + 1;\n        }\n      }\n      let day = birthday.substring(birthday.indexOf(\" \") + 1, birthday.indexOf(\",\"));\n      let converted = monthNum.toString() + \" \" + day.toString();\n      return converted;\n    },\n    convertMonth(monthNum) {\n      for (let i = 0; i < this.monthArray.length; i++) {\n        if (monthNum - 1 === i) {\n          return this.monthArray[i];\n        }\n      }\n    },\n    populateGroupPage(grpName) {\n      let selectedGroup = [];\n      for (let i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].groupName === grpName) {\n          selectedGroup = this.groups[i];\n          break;\n        }\n      }\n      localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n    }\n  },\n  firestore: {\n    // users: usersRef.where(\"saveData\"\n  }\n};","map":{"version":3,"names":["groupListEdit","useCurrentUser","useDocument","useFirestore","collection","doc","signInWithPopup","GoogleAuthProvider","getAuth","onAuthStateChanged","signOut","name","data","groups","selectedGroupArray","birthdayToday","currentDate","monthArray","randomGroups","mounted","auth","user","initialize","date","Date","month","convertMonth","getMonth","day","getDate","toString","length","old","today","i","j","members","pb","birthday","pbshort","substring","indexOf","push","ranNumArr","r","Math","floor","random","methods","currentUser","db","console","log","value","uid","userData","id","convertBday","monthNum","converted","populateGroupPage","grpName","selectedGroup","groupName","localStorage","setItem","JSON","stringify","firestore"],"sources":["/Users/shan/SER375/bias-sorter/src/views/HomeView.vue"],"sourcesContent":["// add birthday of the day\n<template>\n    <div style=\"display: flex\">\n        <div class=\"birthdayDisplay\">\n            <p class=\"date\">Today is {{ currentDate }}! Happy Birthday to:</p>\n            <div class=\"insideDisplay\">\n                <div class=\"peopleDiv\" v-for=\"pers in birthdayToday\">\n                    <a href=\"/groupPage\" style=\"text-decoration: none\" @click=\"populateGroupPage(pers.grpName)\">\n                        <img class=\"bdayPic\" :src=\"require('../assets/imageArchive/' + pers.imgLink)\" />\n                        <p class=\"bdayStage\">{{ pers.stageName }}</p>\n                        <p class=\"bdayGroup\">{{ pers.grpName }}</p>\n                    </a>\n                </div>\n            </div>\n            <p>Hello</p>\n        </div>\n\n        <div class=\"randomDisplay\">\n            <p class=\"date\">Looking for a new group to stan? Check out these groups!</p>\n            <div class=\"insideDisplay\">\n                <div class=\"randomDiv\" v-for=\"group in randomGroups\">\n                    <a href=\"/groupPage\" style=\"text-decoration: none\" @click=\"populateGroupPage(group.groupName)\">\n                        <img class=\"randomPic\" :src=\"require('../assets/imageArchive/' + group.imgLink)\" />\n                        <p class=\"randomName\">{{ group.groupName }}</p>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport groupListEdit from \"@/groupListEdit.json\";\nimport { useCurrentUser, useDocument, useFirestore } from \"vuefire\";\nimport { collection, doc } from \"firebase/firestore\";\nimport {\n    signInWithPopup,\n    GoogleAuthProvider,\n    getAuth,\n    onAuthStateChanged,\n    signOut,\n} from \"firebase/auth\";\n\nexport default {\n    name: \"HomeView\",\n    data() {\n        return {\n            groups: groupListEdit,\n            selectedGroupArray: [],\n            birthdayToday: [],\n            currentDate: \"\",\n            monthArray: [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\",\n            ],\n            randomGroups: [],\n        };\n    },\n    mounted() {\n        const auth = getAuth();\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                this.initialize();\n            } else {\n            }\n        });\n\n        this.birthdayToday = [];\n\n        const date = new Date();\n        let month = this.convertMonth(date.getMonth() + 1);\n        let day = date.getDate().toString();\n\n        this.currentDate = month + \" \" + day;\n\n        if (day.length === 1) {\n            let old = day;\n            day = \"0\" + old;\n        }\n        let today = month + \" \" + day;\n\n        for (let i = 0; i < this.groups.length; i++) {\n            for (let j = 0; j < this.groups[i].members.length; j++) {\n                let pb = this.groups[i].members[j].birthday;\n                let pbshort = pb.substring(0, pb.indexOf(\",\"));\n                if (pbshort === today) {\n                    this.birthdayToday.push(this.groups[i].members[j]);\n                }\n            }\n        }\n        let ranNumArr = [];\n        while (ranNumArr.length < 6) {\n            let r = Math.floor(Math.random() * this.groups.length);\n            if (ranNumArr.indexOf(r) === -1) {\n                ranNumArr.push(r);\n                this.randomGroups.push(this.groups[r]);\n            }\n        }\n    },\n    methods: {\n        initialize() {\n            const currentUser = useCurrentUser();\n            const db = useFirestore();\n            console.log(\"currentUser\", currentUser.value.uid);\n\n            const userData = useDocument(doc(collection(db, \"users\"), currentUser.value.uid));\n\n            console.log(\"users\", collection(db, \"users\"));\n            console.log(\"currentUser\", currentUser);\n            console.log(\"userData\", userData);\n            console.log(\"user.value\", userData.id);\n        },\n        convertBday(birthday) {\n            let month = birthday.substring(0, birthday.indexOf(\" \"));\n            let monthNum = 0;\n            for (let i = 0; i < this.monthArray.length; i++) {\n                if (month === this.monthArray[i]) {\n                    monthNum = i + 1;\n                }\n            }\n            let day = birthday.substring(birthday.indexOf(\" \") + 1, birthday.indexOf(\",\"));\n\n            let converted = monthNum.toString() + \" \" + day.toString();\n\n            return converted;\n        },\n        convertMonth(monthNum) {\n            for (let i = 0; i < this.monthArray.length; i++) {\n                if (monthNum - 1 === i) {\n                    return this.monthArray[i];\n                }\n            }\n        },\n        populateGroupPage(grpName) {\n            let selectedGroup = [];\n            for (let i = 0; i < this.groups.length; i++) {\n                if (this.groups[i].groupName === grpName) {\n                    selectedGroup = this.groups[i];\n                    break;\n                }\n            }\n            localStorage.setItem(\"selectedGroup\", JSON.stringify(selectedGroup));\n        },\n    },\n    firestore: {\n        // users: usersRef.where(\"saveData\"\n    },\n};\n</script>\n\n<style scoped>\n.insideDisplay {\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: left;\n}\n\n.birthdayDisplay {\n    background: rgb(195, 195, 195);\n    background: linear-gradient(180deg,\n            rgba(179, 184, 233, 1) 0px,\n            rgba(116, 127, 230, 1) 45px,\n            rgba(218, 218, 218, 1) 45px,\n            rgba(255, 255, 255, 1) 63%,\n            rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    /* display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center; */\n    height: fit-content;\n    margin: 20px;\n    overflow-x: hidden;\n    padding: 10px;\n    width: 30%;\n    min-width: 230px;\n}\n\n.date {\n    color: white;\n    font-size: 1.3vw;\n    font-weight: bolder;\n    padding: 0px;\n    margin: 1px 0px 20px;\n}\n\n.peopleDiv {\n    border-radius: 5px;\n    height: fit-content;\n    padding: 10px 0px 0px;\n    margin-bottom: 0px;\n    text-align: center;\n    width: 33%;\n}\n\n.peopleDiv:hover {\n    background-color: #b3b8e9;\n}\n\n.bdayStage {\n    color: black;\n    font-size: 15px;\n    font-weight: bold;\n    margin: 5px;\n    text-align: center;\n}\n\n.bdayGroup {\n    color: black;\n    font-size: 0.75em;\n    margin: 5px;\n    text-align: center;\n}\n\n.bdayPic {\n    border-radius: 8px;\n    box-shadow: 0px 0px 5px #00000080;\n    margin: 0px;\n    padding: 0px;\n    width: 80%;\n}\n\n.randomDisplay {\n    background: rgb(195, 195, 195);\n    background: linear-gradient(180deg,\n            rgba(179, 184, 233, 1) 0px,\n            rgba(116, 127, 230, 1) 45px,\n            rgba(218, 218, 218, 1) 45px,\n            rgba(255, 255, 255, 1) 63%,\n            rgba(218, 218, 218, 1) 100%);\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px black;\n    /* display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center; */\n    height: fit-content;\n    margin: 20px;\n    overflow-x: hidden;\n    padding: 10px;\n    width: 65%;\n    min-width: 500px;\n}\n\n.randomDiv {\n    border-radius: 10px;\n    height: fit-content;\n    padding: 10px 20px 0px;\n    margin-bottom: 0px;\n    text-align: center;\n    width: 33%;\n}\n\n.randomDiv:hover {\n    background-color: #b3b8e9;\n}\n\n.randomPic {\n    border-radius: 8px;\n    box-shadow: 0px 0px 5px #00000080;\n    height: 165px;\n    margin: 0px;\n    object-fit: cover;\n    padding: 0px;\n    width: 100%;\n}\n\n.randomName {\n    font-size: 20px;\n    font-weight: bold;\n    margin: 10px 0px 20px;\n    text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}